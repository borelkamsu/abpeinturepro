{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# AB-Peinture Pro - Painting Services Website\n\n## Overview\n\nAB-Peinture Pro is a professional painting services website for \"Les Murs de Augustin\" based in Quebec. This is a full-stack web application that showcases painting services, displays project galleries, and allows customers to request quotes through a contact form. The application features a modern, responsive design with a focus on user experience and professional presentation of painting and renovation services.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript using Vite as the build tool\n- **Routing**: Wouter for client-side routing with pages for Home, Services, About, Gallery, and Contact\n- **UI Framework**: Shadcn/UI components built on Radix UI primitives with Tailwind CSS for styling\n- **State Management**: TanStack Query (React Query) for server state management and API interactions\n- **Form Handling**: React Hook Form with Zod validation for type-safe form processing\n- **Styling**: Tailwind CSS with custom color scheme and typography (Poppins, Inter fonts)\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js server\n- **Language**: TypeScript with ES modules\n- **API Design**: RESTful endpoints for contact form submissions and data retrieval\n- **Development Setup**: Development server with Vite integration for hot module replacement\n- **Error Handling**: Centralized error handling middleware with structured error responses\n\n### Data Storage Solutions\n- **Database**: PostgreSQL configured through Drizzle ORM\n- **ORM**: Drizzle ORM with type-safe schema definitions and migrations\n- **Development Storage**: In-memory storage fallback for development environments\n- **Schema**: Contact management with fields for customer inquiries including name, email, phone, service type, and message\n\n### External Dependencies\n- **Database Provider**: Neon Database (serverless PostgreSQL)\n- **Image Hosting**: Unsplash for portfolio and stock images\n- **Font Loading**: Google Fonts (Poppins, Inter, DM Sans, Fira Code, Geist Mono)\n- **Development Tools**: Replit integration with development banner and cartographer plugin\n- **Session Management**: Connect-pg-simple for PostgreSQL session storage\n- **UI Components**: Extensive Radix UI component library for accessible, customizable interface elements\n\nThe application follows a monorepo structure with shared schema definitions between frontend and backend, ensuring type safety across the full stack. The design emphasizes performance with proper code splitting, lazy loading, and optimized asset delivery.","size_bytes":2676},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        // Custom colors matching design\n        'primary-green': '#3cb18a',\n        'light': '#FDFEFE',\n        'neutral': '#6A6F7A',\n        'secondary-blue': '#142D46',\n        'dark': '#1b1f2a',\n        'accent-orange': '#F39C12',\n        'success-green': '#27AE60',\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        poppins: [\"var(--font-poppins)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3068},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"â€¦\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertContactSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Contact form submission\n  app.post(\"/api/contacts\", async (req, res) => {\n    try {\n      const validatedData = insertContactSchema.parse(req.body);\n      const contact = await storage.createContact(validatedData);\n      res.json({ success: true, contact });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ error: \"Invalid form data\", details: error.errors });\n      } else {\n        res.status(500).json({ error: \"Internal server error\" });\n      }\n    }\n  });\n\n  // Get all contacts (for admin purposes)\n  app.get(\"/api/contacts\", async (req, res) => {\n    try {\n      const contacts = await storage.getContacts();\n      res.json(contacts);\n    } catch (error) {\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":1133},"server/storage.ts":{"content":"import { type Contact, type InsertContact } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  getUser(id: string): Promise<any | undefined>;\n  getUserByUsername(username: string): Promise<any | undefined>;\n  createUser(user: any): Promise<any>;\n  createContact(contact: InsertContact): Promise<Contact>;\n  getContacts(): Promise<Contact[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, any>;\n  private contacts: Map<string, Contact>;\n\n  constructor() {\n    this.users = new Map();\n    this.contacts = new Map();\n  }\n\n  async getUser(id: string): Promise<any | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<any | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: any): Promise<any> {\n    const id = randomUUID();\n    const user: any = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async createContact(insertContact: InsertContact): Promise<Contact> {\n    const id = randomUUID();\n    const contact: Contact = { \n      ...insertContact,\n      phone: insertContact.phone || null,\n      id,\n      createdAt: new Date()\n    };\n    this.contacts.set(id, contact);\n    return contact;\n  }\n\n  async getContacts(): Promise<Contact[]> {\n    return Array.from(this.contacts.values());\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1482},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const contacts = pgTable(\"contacts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  firstName: text(\"first_name\").notNull(),\n  lastName: text(\"last_name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\"),\n  serviceType: text(\"service_type\").notNull(),\n  message: text(\"message\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertContactSchema = createInsertSchema(contacts).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertContact = z.infer<typeof insertContactSchema>;\nexport type Contact = typeof contacts.$inferSelect;\n","size_bytes":813},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\nimport Services from \"@/pages/services\";\nimport About from \"@/pages/about\";\nimport Gallery from \"@/pages/gallery\";\nimport Contact from \"@/pages/contact\";\nimport PeintureInterieure from \"@/pages/services/peinture-interieure\";\nimport RevetementsMuraux from \"@/pages/services/revetements-muraux\";\nimport EstimationGratuite from \"@/pages/services/estimation-gratuite\";\nimport ConseilExpert from \"@/pages/services/conseil-expert\";\nimport TirageJoints from \"@/pages/services/tirage-joints\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\n\nfunction Router() {\n  return (\n    <div className=\"min-h-screen bg-light\">\n      <Header />\n      <Switch>\n        <Route path=\"/\" component={Home} />\n        <Route path=\"/services\" component={Services} />\n        <Route path=\"/services/peinture-interieure\" component={PeintureInterieure} />\n        <Route path=\"/services/revetements-muraux\" component={RevetementsMuraux} />\n        <Route path=\"/services/estimation-gratuite\" component={EstimationGratuite} />\n        <Route path=\"/services/conseil-expert\" component={ConseilExpert} />\n        <Route path=\"/services/tirage-joints\" component={TirageJoints} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/gallery\" component={Gallery} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route component={NotFound} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1999},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Inter:wght@300;400;500;600&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 99.2%);\n  --foreground: hsl(215, 13.8%, 34.1%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(215, 13.8%, 34.1%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(215, 13.8%, 34.1%);\n  --primary: hsl(160, 51%, 49%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(210, 50%, 20%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(215, 13.8%, 95%);\n  --muted-foreground: hsl(215, 13.8%, 44%);\n  --accent: hsl(35, 91%, 51%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(214, 32%, 91%);\n  --input: hsl(214, 32%, 91%);\n  --ring: hsl(160, 51%, 49%);\n  --chart-1: hsl(160, 51%, 49%);\n  --chart-2: hsl(160, 70%, 50%);\n  --chart-3: hsl(35, 91%, 51%);\n  --chart-4: hsl(47, 86%, 56%);\n  --chart-5: hsl(12, 76%, 61%);\n  --sidebar: hsl(0, 0%, 100%);\n  --sidebar-foreground: hsl(215, 13.8%, 34.1%);\n  --sidebar-primary: hsl(160, 51%, 49%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(215, 13.8%, 95%);\n  --sidebar-accent-foreground: hsl(215, 13.8%, 34.1%);\n  --sidebar-border: hsl(214, 32%, 91%);\n  --sidebar-ring: hsl(160, 51%, 49%);\n  --font-sans: 'Inter', sans-serif;\n  --font-poppins: 'Poppins', sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 0.75rem;\n  \n  /* Custom colors */\n  --primary-green: hsl(160, 51%, 49%);\n  --light-bg: hsl(0, 0%, 99.2%);\n  --neutral-text: hsl(215, 13.8%, 44%);\n  --secondary-blue: hsl(210, 50%, 20%);\n  --dark-bg: hsl(213, 23%, 17%);\n  --accent-orange: hsl(35, 91%, 51%);\n  --success-green: hsl(134, 61%, 41%);\n}\n\n.dark {\n  --background: hsl(213, 23%, 17%);\n  --foreground: hsl(213, 31%, 91%);\n  --card: hsl(213, 23%, 20%);\n  --card-foreground: hsl(213, 31%, 91%);\n  --popover: hsl(213, 23%, 17%);\n  --popover-foreground: hsl(213, 31%, 91%);\n  --primary: hsl(160, 51%, 49%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(213, 19%, 18%);\n  --secondary-foreground: hsl(213, 31%, 91%);\n  --muted: hsl(213, 19%, 18%);\n  --muted-foreground: hsl(215, 13.8%, 63%);\n  --accent: hsl(35, 91%, 51%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(213, 19%, 18%);\n  --input: hsl(213, 19%, 18%);\n  --ring: hsl(160, 51%, 49%);\n  --sidebar: hsl(213, 23%, 20%);\n  --sidebar-foreground: hsl(213, 31%, 91%);\n  --sidebar-primary: hsl(160, 51%, 49%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(213, 19%, 18%);\n  --sidebar-accent-foreground: hsl(213, 31%, 91%);\n  --sidebar-border: hsl(213, 19%, 18%);\n  --sidebar-ring: hsl(160, 51%, 49%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n\n  .font-poppins {\n    font-family: var(--font-poppins);\n  }\n}\n\n@layer utilities {\n  .text-primary-green {\n    color: var(--primary-green);\n  }\n  \n  .bg-primary-green {\n    background-color: var(--primary-green);\n  }\n  \n  .text-neutral-custom {\n    color: var(--neutral-text);\n  }\n  \n  .bg-light {\n    background-color: var(--light-bg);\n  }\n  \n  .text-secondary-blue {\n    color: var(--secondary-blue);\n  }\n  \n  .bg-secondary-blue {\n    background-color: var(--secondary-blue);\n  }\n  \n  .bg-dark {\n    background-color: var(--dark-bg);\n  }\n  \n  .text-accent-orange {\n    color: var(--accent-orange);\n  }\n  \n  .bg-accent-orange {\n    background-color: var(--accent-orange);\n  }\n  \n  .text-success-green {\n    color: var(--success-green);\n  }\n  \n  .bg-success-green {\n    background-color: var(--success-green);\n  }\n}\n","size_bytes":3858},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/contact-form.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { insertContactSchema } from \"@shared/schema\";\n\nconst formSchema = insertContactSchema;\n\nexport default function ContactForm() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      serviceType: \"\",\n      message: \"\",\n    },\n  });\n\n  const contactMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof formSchema>) => {\n      const response = await apiRequest(\"POST\", \"/api/contacts\", data);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Message envoyÃ©!\",\n        description: \"Merci pour votre demande! Nous vous contacterons sous 24h.\",\n      });\n      form.reset();\n      queryClient.invalidateQueries({ queryKey: [\"/api/contacts\"] });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Erreur\",\n        description: \"Une erreur est survenue. Veuillez rÃ©essayer.\",\n        variant: \"destructive\",\n      });\n      console.error(\"Contact form error:\", error);\n    },\n  });\n\n  const onSubmit = (data: z.infer<typeof formSchema>) => {\n    contactMutation.mutate(data);\n  };\n\n  const serviceOptions = [\n    \"Peinture rÃ©sidentielle intÃ©rieure\",\n    \"Peinture extÃ©rieure\",\n    \"RÃ©novation complÃ¨te\",\n    \"RevÃªtement muraux\",\n    \"Sablage et vernissage\",\n    \"Autre (prÃ©ciser dans le message)\"\n  ];\n\n  return (\n    <Card className=\"shadow-xl\" data-testid=\"contact-form\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl font-poppins font-semibold text-secondary-blue\">\n          Demande de Devis\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"firstName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>PrÃ©nom *</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Votre prÃ©nom\" {...field} data-testid=\"input-firstName\" />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"lastName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Nom *</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Votre nom\" {...field} data-testid=\"input-lastName\" />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email *</FormLabel>\n                  <FormControl>\n                    <Input type=\"email\" placeholder=\"votre@email.com\" {...field} data-testid=\"input-email\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"phone\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>TÃ©lÃ©phone</FormLabel>\n                  <FormControl>\n                    <Input type=\"tel\" placeholder=\"(418) 000-0000\" {...field} value={field.value || \"\"} data-testid=\"input-phone\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"serviceType\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Type de Service *</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-serviceType\">\n                        <SelectValue placeholder=\"SÃ©lectionnez un service\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      {serviceOptions.map((service) => (\n                        <SelectItem key={service} value={service} data-testid={`option-${service}`}>\n                          {service}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"message\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Description du Projet *</FormLabel>\n                  <FormControl>\n                    <Textarea \n                      placeholder=\"DÃ©crivez votre projet en dÃ©tail...\"\n                      rows={4}\n                      {...field}\n                      data-testid=\"textarea-message\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <Button \n              type=\"submit\" \n              className=\"w-full bg-primary-green hover:bg-primary-green/90 text-white py-4 text-lg font-semibold transition-all transform hover:scale-105\"\n              disabled={contactMutation.isPending}\n              data-testid=\"button-submit-contact\"\n            >\n              {contactMutation.isPending ? \"Envoi en cours...\" : \"Envoyer ma Demande\"}\n            </Button>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":6784},"client/src/components/gallery-grid.tsx":{"content":"const portfolioImages = [\n  {\n    src: \"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&h=400\",\n    alt: \"Salon moderne avec peinture professionnelle\"\n  },\n  {\n    src: \"https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&h=400\",\n    alt: \"Cuisine moderne avec finition peinture parfaite\"\n  },\n  {\n    src: \"https://images.unsplash.com/photo-1571508601891-ca5e7a713859?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&h=400\",\n    alt: \"Chambre Ã©lÃ©gante avec peinture murale parfaite\"\n  },\n  {\n    src: \"https://images.unsplash.com/photo-1570129477492-45c003edd2be?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&h=400\",\n    alt: \"Maison extÃ©rieure avec peinture professionnelle\"\n  },\n  {\n    src: \"https://images.unsplash.com/photo-1620626011761-996317b8d101?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&h=400\",\n    alt: \"Salle de bain moderne avec finition parfaite\"\n  },\n  {\n    src: \"https://images.unsplash.com/photo-1497366216548-37526070297c?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&h=400\",\n    alt: \"Espace commercial avec peinture professionnelle\"\n  }\n];\n\ninterface GalleryGridProps {\n  showAll?: boolean;\n}\n\nexport default function GalleryGrid({ showAll = false }: GalleryGridProps) {\n  const imagesToShow = showAll ? portfolioImages : portfolioImages.slice(0, 6);\n\n  return (\n    <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\" data-testid=\"gallery-grid\">\n      {imagesToShow.map((image, index) => (\n        <div key={index} className=\"group cursor-pointer\" data-testid={`gallery-image-${index}`}>\n          <img \n            src={image.src}\n            alt={image.alt}\n            className=\"w-full h-64 object-cover rounded-xl shadow-lg group-hover:shadow-xl transition-all group-hover:scale-105\"\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n","size_bytes":2166},"client/src/components/hero-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\n\nexport default function HeroSection() {\n  const [, setLocation] = useLocation();\n\n  const handleGetQuote = () => {\n    setLocation(\"/contact\");\n  };\n\n  const handleDiscoverServices = () => {\n    setLocation(\"/services\");\n  };\n\n  return (\n    <section className=\"pt-20\" data-testid=\"hero-section\">\n      <div className=\"relative min-h-screen flex items-center\">\n        {/* Background with overlay */}\n        <div \n          className=\"absolute inset-0 bg-cover bg-center bg-no-repeat\"\n          style={{\n            backgroundImage: `linear-gradient(rgba(20, 45, 70, 0.7), rgba(27, 31, 42, 0.8)), url('https://images.unsplash.com/photo-1562259949-e8e7689d7828?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80')`\n          }}\n        />\n        \n        <div className=\"relative container mx-auto px-4 text-center text-white\">\n          <h1 className=\"text-5xl md:text-7xl font-poppins font-bold mb-6\" data-testid=\"hero-title\">\n            Les Murs de <span className=\"text-primary-green\">Augustin</span>\n          </h1>\n          <p className=\"text-xl md:text-2xl mb-8 max-w-3xl mx-auto leading-relaxed\" data-testid=\"hero-subtitle\">\n            Transformons vos espaces avec la passion et l'expertise d'AB-Peinture Pro. \n            Votre vision, notre savoir-faire.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button \n              size=\"lg\"\n              className=\"bg-primary-green hover:bg-primary-green/90 text-white px-8 py-4 text-lg font-semibold transition-all transform hover:scale-105\"\n              onClick={handleGetQuote}\n              data-testid=\"button-get-quote\"\n            >\n              Obtenir un Devis Gratuit\n            </Button>\n            <Button \n              variant=\"outline\"\n              size=\"lg\"\n              className=\"border-2 border-white text-white hover:bg-white hover:text-secondary-blue px-8 py-4 text-lg font-semibold transition-all\"\n              onClick={handleDiscoverServices}\n              data-testid=\"button-discover-services\"\n            >\n              DÃ©couvrir nos Services\n            </Button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2317},"client/src/components/services-showcase.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Home, Layers, Calculator, Lightbulb, Wrench, Star } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\n\nconst mainServices = [\n  {\n    icon: Home,\n    title: \"Peinture RÃ©sidentielle IntÃ©rieure\",\n    description: \"Transformez vos espaces de vie avec notre expertise en peinture intÃ©rieure. Finitions impeccables garanties.\",\n    image: \"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=300\"\n  },\n  {\n    icon: Layers,\n    title: \"RevÃªtements Muraux\",\n    description: \"Nettoyage professionnel et pose experte de tous types de revÃªtements muraux pour un rendu exceptionnel.\",\n    image: \"https://images.unsplash.com/photo-1581858726788-75bc0f6a952d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=300\"\n  },\n  {\n    icon: Calculator,\n    title: \"Estimation Gratuite\",\n    description: \"Ã‰valuation prÃ©cise et transparente de vos projets. Devis dÃ©taillÃ© gratuit sous 24h.\",\n    image: \"https://images.unsplash.com/photo-1560472354-b33ff0c44a43?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=300\"\n  },\n  {\n    icon: Lightbulb,\n    title: \"Conseil Expert\",\n    description: \"Accompagnement personnalisÃ© dans le choix des couleurs, finitions et techniques adaptÃ©es Ã  vos besoins.\",\n    image: \"https://images.unsplash.com/photo-1541123603104-512919d6a96c?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=300\"\n  },\n  {\n    icon: Wrench,\n    title: \"Tirage des Joints\",\n    description: \"Finition parfaite des joints de gypse pour des surfaces lisses et prÃªtes Ã  recevoir la peinture.\",\n    image: \"https://images.unsplash.com/photo-1504307651254-35680f356dfd?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=300\"\n  }\n];\n\nexport default function ServicesShowcase() {\n  const [, setLocation] = useLocation();\n\n  const handleServiceDetails = (serviceName: string) => {\n    const serviceRoutes: { [key: string]: string } = {\n      \"Peinture RÃ©sidentielle IntÃ©rieure\": \"/services/peinture-interieure\",\n      \"RevÃªtements Muraux\": \"/services/revetements-muraux\",\n      \"Estimation Gratuite\": \"/services/estimation-gratuite\",\n      \"Conseil Expert\": \"/services/conseil-expert\",\n      \"Tirage des Joints\": \"/services/tirage-joints\"\n    };\n    setLocation(serviceRoutes[serviceName] || \"/services\");\n  };\n\n  const handleViewAllServices = () => {\n    setLocation(\"/services\");\n  };\n\n  return (\n    <section className=\"py-20 bg-white\" data-testid=\"services-showcase\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-poppins font-bold text-secondary-blue mb-4\" data-testid=\"services-title\">\n            Nos Services Principaux\n          </h2>\n          <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n            DÃ©couvrez notre gamme complÃ¨te de services de peinture et de rÃ©novation pour tous vos projets\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {mainServices.map((service, index) => {\n            const IconComponent = service.icon;\n            return (\n              <Card key={index} className=\"group hover:shadow-xl transition-shadow overflow-hidden\" data-testid={`service-card-${index}`}>\n                <img \n                  src={service.image}\n                  alt={service.title}\n                  className=\"w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300\"\n                />\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center mb-3\">\n                    <IconComponent className=\"text-primary-green text-2xl mr-3\" size={24} />\n                    <h3 className=\"text-xl font-poppins font-semibold text-secondary-blue\">{service.title}</h3>\n                  </div>\n                  <p className=\"text-neutral mb-4\">\n                    {service.description}\n                  </p>\n                  <Button \n                    variant=\"link\" \n                    className=\"text-primary-green font-semibold hover:text-secondary-blue p-0\"\n                    onClick={() => handleServiceDetails(service.title)}\n                    data-testid={`button-service-details-${index}`}\n                  >\n                    En savoir plus â†’\n                  </Button>\n                </CardContent>\n              </Card>\n            );\n          })}\n\n          {/* Premium Service Highlight */}\n          <Card className=\"bg-gradient-to-br from-primary-green to-secondary-blue text-white group hover:shadow-xl transition-shadow\" data-testid=\"premium-service-card\">\n            <CardContent className=\"p-8 text-center\">\n              <Star className=\"text-4xl mb-4 text-accent-orange mx-auto\" size={48} />\n              <h3 className=\"text-xl font-poppins font-semibold mb-4\">Service Premium</h3>\n              <p className=\"mb-6\">\n                DÃ©couvrez notre gamme complÃ¨te de services de rÃ©novation et de finition\n              </p>\n              <Button \n                className=\"bg-white text-secondary-blue hover:bg-gray-100\"\n                onClick={handleViewAllServices}\n                data-testid=\"button-view-all-services\"\n              >\n                Voir Tous nos Services\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5689},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Award, Clock, Leaf, Handshake, Phone, Mail, MapPin, CheckCircle, Star, Users, Target } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\n\nexport default function About() {\n  const [, setLocation] = useLocation();\n\n  const handleContact = () => {\n    setLocation(\"/contact\");\n  };\n\n  const values = [\n    {\n      icon: Award,\n      title: \"Excellence\",\n      description: \"Nous nous engageons Ã  livrer des rÃ©sultats exceptionnels sur chaque projet\"\n    },\n    {\n      icon: Handshake,\n      title: \"IntÃ©gritÃ©\",\n      description: \"Transparence et honnÃªtetÃ© dans toutes nos relations clients\"\n    },\n    {\n      icon: Leaf,\n      title: \"DurabilitÃ©\",\n      description: \"Utilisation de matÃ©riaux Ã©cologiques et pratiques responsables\"\n    },\n    {\n      icon: Users,\n      title: \"Service Client\",\n      description: \"Satisfaction client au cÅ“ur de toutes nos dÃ©cisions\"\n    }\n  ];\n\n  const achievements = [\n    { number: \"500+\", label: \"Projets RÃ©alisÃ©s\" },\n    { number: \"98%\", label: \"Clients Satisfaits\" },\n    { number: \"10+\", label: \"AnnÃ©es d'ExpÃ©rience\" },\n    { number: \"24h\", label: \"Temps de RÃ©ponse\" }\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"about-page\">\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-secondary-blue to-dark text-white\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h1 className=\"text-5xl md:text-6xl font-poppins font-bold mb-6\" data-testid=\"about-hero-title\">\n            Ã€ Propos d'AB-Peinture Pro\n          </h1>\n          <p className=\"text-xl md:text-2xl max-w-3xl mx-auto leading-relaxed\">\n            \"Les Murs de Augustin\" - Une histoire de passion, d'expertise et d'engagement envers l'excellence\n          </p>\n        </div>\n      </section>\n\n      {/* Owner Story */}\n      <section className=\"py-20 bg-white\" data-testid=\"owner-story\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div className=\"order-2 lg:order-1\">\n              <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-6\">\n                Mbe nde Augustin\n              </h2>\n              <h3 className=\"text-xl text-primary-green font-semibold mb-4\">\n                Fondateur et PropriÃ©taire\n              </h3>\n              <p className=\"text-lg text-neutral mb-6 leading-relaxed\">\n                PassionnÃ© par l'art de la transformation des espaces, Augustin a fondÃ© AB-Peinture Pro \n                avec une vision claire : offrir des services de peinture et de rÃ©novation qui dÃ©passent \n                les attentes de ses clients.\n              </p>\n              <p className=\"text-lg text-neutral mb-6 leading-relaxed\">\n                Fort de nombreuses annÃ©es d'expÃ©rience dans le domaine, il a dÃ©veloppÃ© une expertise \n                reconnue dans la rÃ©gion de QuÃ©bec. Son approche personnalisÃ©e et son attention \n                mÃ©ticuleuse aux dÃ©tails font de chaque projet une rÃ©ussite.\n              </p>\n              <p className=\"text-lg text-neutral mb-8 leading-relaxed\">\n                La devise \"Les Murs de Augustin\" n'est pas qu'un slogan - c'est l'engagement personnel \n                d'Augustin envers chaque client de traiter votre projet comme s'il s'agissait de sa propre maison.\n              </p>\n              \n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <Button \n                  className=\"bg-primary-green hover:bg-primary-green/90\"\n                  onClick={handleContact}\n                  data-testid=\"button-contact-augustin\"\n                >\n                  Contacter Augustin\n                </Button>\n                <Button \n                  variant=\"outline\"\n                  className=\"border-primary-green text-primary-green hover:bg-primary-green hover:text-white\"\n                  onClick={() => setLocation(\"/services\")}\n                  data-testid=\"button-view-services\"\n                >\n                  Voir nos Services\n                </Button>\n              </div>\n            </div>\n            \n            <div className=\"order-1 lg:order-2\">\n              <img \n                src=\"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=800\"\n                alt=\"Mbe nde Augustin - Fondateur AB-Peinture Pro\"\n                className=\"rounded-xl shadow-lg w-full max-w-md mx-auto\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Company Values */}\n      <section className=\"py-20 bg-gray-50\" data-testid=\"company-values\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-poppins font-bold text-secondary-blue mb-4\">\n              Nos Valeurs\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Les principes qui guident notre travail et notre relation avec nos clients\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {values.map((value, index) => {\n              const IconComponent = value.icon;\n              return (\n                <Card key={index} className=\"text-center hover:shadow-lg transition-shadow\" data-testid={`value-${index}`}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"w-16 h-16 bg-primary-green rounded-full flex items-center justify-center mx-auto mb-4\">\n                      <IconComponent className=\"text-white\" size={24} />\n                    </div>\n                    <h3 className=\"text-xl font-poppins font-semibold text-secondary-blue mb-3\">\n                      {value.title}\n                    </h3>\n                    <p className=\"text-neutral\">\n                      {value.description}\n                    </p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Achievements */}\n      <section className=\"py-20 bg-primary-green text-white\" data-testid=\"achievements\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-poppins font-bold mb-4\">\n              Nos RÃ©alisations\n            </h2>\n            <p className=\"text-xl max-w-2xl mx-auto\">\n              Des chiffres qui tÃ©moignent de notre engagement et de notre expertise\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {achievements.map((achievement, index) => (\n              <div key={index} className=\"text-center\" data-testid={`achievement-${index}`}>\n                <div className=\"text-5xl font-poppins font-bold mb-2\">\n                  {achievement.number}\n                </div>\n                <div className=\"text-xl\">\n                  {achievement.label}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Why Choose Us */}\n      <section className=\"py-20 bg-white\" data-testid=\"why-choose-us\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-6\">\n                Pourquoi Choisir AB-Peinture Pro?\n              </h2>\n              \n              <div className=\"space-y-6 mb-8\">\n                <div className=\"flex items-start space-x-4\">\n                  <CheckCircle className=\"text-primary-green mt-1\" size={24} />\n                  <div>\n                    <h4 className=\"font-semibold text-secondary-blue mb-2\">Expertise Reconnue</h4>\n                    <p className=\"text-neutral\">Des annÃ©es d'expÃ©rience et une formation continue pour rester Ã  la pointe des techniques</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <CheckCircle className=\"text-primary-green mt-1\" size={24} />\n                  <div>\n                    <h4 className=\"font-semibold text-secondary-blue mb-2\">MatÃ©riaux de QualitÃ©</h4>\n                    <p className=\"text-neutral\">Utilisation exclusive de peintures et matÃ©riaux haut de gamme pour une durabilitÃ© maximale</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <CheckCircle className=\"text-primary-green mt-1\" size={24} />\n                  <div>\n                    <h4 className=\"font-semibold text-secondary-blue mb-2\">Service PersonnalisÃ©</h4>\n                    <p className=\"text-neutral\">Chaque projet est unique et bÃ©nÃ©ficie d'une approche sur mesure</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <CheckCircle className=\"text-primary-green mt-1\" size={24} />\n                  <div>\n                    <h4 className=\"font-semibold text-secondary-blue mb-2\">Garantie Satisfaction</h4>\n                    <p className=\"text-neutral\">Nous ne considÃ©rons le travail terminÃ© que lorsque vous Ãªtes entiÃ¨rement satisfait</p>\n                  </div>\n                </div>\n              </div>\n\n              <Button \n                size=\"lg\"\n                className=\"bg-primary-green hover:bg-primary-green/90\"\n                onClick={handleContact}\n                data-testid=\"button-start-project\"\n              >\n                Commencer Votre Projet\n              </Button>\n            </div>\n            \n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1581858726788-75bc0f6a952d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\n                alt=\"Ã‰quipe AB-Peinture Pro au travail\"\n                className=\"rounded-xl shadow-lg w-full\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Information */}\n      <section className=\"py-20 bg-secondary-blue text-white\" data-testid=\"contact-info\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-4xl font-poppins font-bold mb-4\">\n              Contactez Augustin\n            </h2>\n            <p className=\"text-xl max-w-2xl mx-auto\">\n              PrÃªt Ã  discuter de votre projet? Augustin est Ã  votre Ã©coute\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 max-w-4xl mx-auto\">\n            <Card className=\"bg-white bg-opacity-10 border-0 text-center\">\n              <CardContent className=\"p-6\">\n                <Phone className=\"text-primary-green mx-auto mb-4\" size={32} />\n                <h4 className=\"font-semibold text-lg mb-2\">TÃ©lÃ©phone</h4>\n                <p className=\"text-gray-300\">(418) 473-6433</p>\n                <p className=\"text-sm text-gray-400 mt-1\">Lun-Ven: 8h00-18h00</p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-white bg-opacity-10 border-0 text-center\">\n              <CardContent className=\"p-6\">\n                <Mail className=\"text-primary-green mx-auto mb-4\" size={32} />\n                <h4 className=\"font-semibold text-lg mb-2\">Email</h4>\n                <p className=\"text-gray-300\">augustinmbende82@yahoo.com</p>\n                <p className=\"text-sm text-gray-400 mt-1\">RÃ©ponse sous 24h</p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-white bg-opacity-10 border-0 text-center\">\n              <CardContent className=\"p-6\">\n                <MapPin className=\"text-primary-green mx-auto mb-4\" size={32} />\n                <h4 className=\"font-semibold text-lg mb-2\">Adresse</h4>\n                <p className=\"text-gray-300\">\n                  3637 rue des sureaux<br/>\n                  Charlesbourg, QuÃ©bec<br/>\n                  G1G1Z7\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          <div className=\"text-center mt-12\">\n            <Button \n              size=\"lg\"\n              className=\"bg-primary-green hover:bg-primary-green/90 px-8 py-4 text-lg\"\n              onClick={handleContact}\n              data-testid=\"button-contact-now\"\n            >\n              Nous Contacter Maintenant\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":12837},"client/src/pages/contact.tsx":{"content":"import ContactForm from \"@/components/contact-form\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Phone, Mail, MapPin, Clock, CheckCircle, Star } from \"lucide-react\";\n\nexport default function Contact() {\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"contact-page\">\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-secondary-blue to-dark text-white\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h1 className=\"text-5xl md:text-6xl font-poppins font-bold mb-6\" data-testid=\"contact-hero-title\">\n            Contactez-nous\n          </h1>\n          <p className=\"text-xl md:text-2xl max-w-3xl mx-auto leading-relaxed\">\n            PrÃªt Ã  transformer vos espaces? Obtenez votre devis gratuit dÃ¨s aujourd'hui\n          </p>\n        </div>\n      </section>\n\n      {/* Main Contact Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"main-contact-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12\">\n            {/* Contact Form */}\n            <div>\n              <ContactForm />\n            </div>\n\n            {/* Contact Information */}\n            <div className=\"space-y-8\">\n              <div>\n                <h3 className=\"text-2xl font-poppins font-semibold text-secondary-blue mb-6\">\n                  Informations de Contact\n                </h3>\n                \n                <div className=\"space-y-6\">\n                  <div className=\"flex items-start space-x-4\" data-testid=\"contact-address-info\">\n                    <div className=\"w-12 h-12 bg-primary-green rounded-full flex items-center justify-center flex-shrink-0\">\n                      <MapPin className=\"text-white\" size={20} />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-lg mb-2\">Adresse</h4>\n                      <p className=\"text-neutral\">\n                        3637 rue des sureaux<br/>\n                        Charlesbourg, QuÃ©bec<br/>\n                        G1G1Z7\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-4\" data-testid=\"contact-phone-info\">\n                    <div className=\"w-12 h-12 bg-accent-orange rounded-full flex items-center justify-center flex-shrink-0\">\n                      <Phone className=\"text-white\" size={20} />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-lg mb-2\">TÃ©lÃ©phone</h4>\n                      <p className=\"text-neutral\">(418) 473-6433</p>\n                      <p className=\"text-sm text-gray-500\">Lun-Ven: 8h00-18h00</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-4\" data-testid=\"contact-email-info\">\n                    <div className=\"w-12 h-12 bg-success-green rounded-full flex items-center justify-center flex-shrink-0\">\n                      <Mail className=\"text-white\" size={20} />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-lg mb-2\">Email</h4>\n                      <p className=\"text-neutral\">augustinmbende82@yahoo.com</p>\n                      <p className=\"text-sm text-gray-500\">RÃ©ponse sous 24h</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-4\" data-testid=\"contact-hours-info\">\n                    <div className=\"w-12 h-12 bg-secondary-blue rounded-full flex items-center justify-center flex-shrink-0\">\n                      <Clock className=\"text-white\" size={20} />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-lg mb-2\">Heures d'Ouverture</h4>\n                      <div className=\"text-neutral text-sm\">\n                        <p>Lundi - Vendredi: 8h00 - 18h00</p>\n                        <p>Samedi: 9h00 - 16h00</p>\n                        <p>Dimanche: Sur rendez-vous</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <Card className=\"bg-gray-50\">\n                <CardContent className=\"p-6\">\n                  <h4 className=\"font-poppins font-semibold text-lg mb-4 text-secondary-blue\">\n                    Pourquoi Choisir AB-Peinture Pro?\n                  </h4>\n                  <ul className=\"space-y-3 text-neutral\">\n                    <li className=\"flex items-center space-x-3\">\n                      <CheckCircle className=\"text-primary-green\" size={20} />\n                      <span>Devis gratuit et dÃ©taillÃ©</span>\n                    </li>\n                    <li className=\"flex items-center space-x-3\">\n                      <CheckCircle className=\"text-primary-green\" size={20} />\n                      <span>MatÃ©riaux de qualitÃ© supÃ©rieure</span>\n                    </li>\n                    <li className=\"flex items-center space-x-3\">\n                      <CheckCircle className=\"text-primary-green\" size={20} />\n                      <span>Ã‰quipe expÃ©rimentÃ©e et assurÃ©e</span>\n                    </li>\n                    <li className=\"flex items-center space-x-3\">\n                      <CheckCircle className=\"text-primary-green\" size={20} />\n                      <span>Satisfaction client garantie</span>\n                    </li>\n                  </ul>\n                </CardContent>\n              </Card>\n              \n              <Card className=\"bg-primary-green text-white\">\n                <CardContent className=\"p-6 text-center\">\n                  <Star className=\"text-accent-orange mx-auto mb-4\" size={32} />\n                  <h4 className=\"font-poppins font-semibold text-xl mb-2\">\n                    Urgence 24/7\n                  </h4>\n                  <p className=\"mb-4\">\n                    Pour les projets urgents, n'hÃ©sitez pas Ã  nous appeler\n                  </p>\n                  <Button \n                    className=\"bg-white text-primary-green hover:bg-gray-100\"\n                    data-testid=\"button-emergency-call\"\n                  >\n                    Appeler Maintenant\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Service Areas */}\n      <section className=\"py-20 bg-gray-50\" data-testid=\"service-areas\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-poppins font-bold text-secondary-blue mb-4\">\n              Zones de Service\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Nous desservons fiÃ¨rement la rÃ©gion de QuÃ©bec et ses environs\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 lg:grid-cols-4 gap-6 max-w-4xl mx-auto\">\n            {[\n              \"Charlesbourg\", \"QuÃ©bec\", \"Sainte-Foy\", \"Sillery\",\n              \"Cap-Rouge\", \"L'Ancienne-Lorette\", \"Saint-Augustin\", \"Beauport\"\n            ].map((area, index) => (\n              <Card key={index} className=\"text-center hover:shadow-lg transition-shadow\" data-testid={`service-area-${index}`}>\n                <CardContent className=\"p-4\">\n                  <MapPin className=\"text-primary-green mx-auto mb-2\" size={24} />\n                  <h4 className=\"font-semibold text-secondary-blue\">{area}</h4>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          <div className=\"text-center mt-12\">\n            <p className=\"text-neutral mb-4\">\n              Votre ville n'est pas listÃ©e? Contactez-nous, nous nous dÃ©plaÃ§ons!\n            </p>\n            <Button \n              className=\"bg-primary-green hover:bg-primary-green/90\"\n              data-testid=\"button-ask-service-area\"\n            >\n              VÃ©rifier la DisponibilitÃ©\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* FAQ Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"faq-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-poppins font-bold text-secondary-blue mb-4\">\n              Questions FrÃ©quentes\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Trouvez rapidement les rÃ©ponses Ã  vos questions\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 gap-8 max-w-4xl mx-auto\">\n            <Card data-testid=\"faq-1\">\n              <CardContent className=\"p-6\">\n                <h4 className=\"font-semibold text-secondary-blue mb-3\">\n                  Combien de temps prend un projet de peinture intÃ©rieure?\n                </h4>\n                <p className=\"text-neutral\">\n                  La durÃ©e dÃ©pend de la taille du projet. Une piÃ¨ce standard prend 2-3 jours, \n                  une maison complÃ¨te peut prendre 1-2 semaines.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card data-testid=\"faq-2\">\n              <CardContent className=\"p-6\">\n                <h4 className=\"font-semibold text-secondary-blue mb-3\">\n                  Fournissez-vous les matÃ©riaux?\n                </h4>\n                <p className=\"text-neutral\">\n                  Oui, nous fournissons tous les matÃ©riaux nÃ©cessaires de qualitÃ© supÃ©rieure. \n                  Le coÃ»t est inclus dans notre devis.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card data-testid=\"faq-3\">\n              <CardContent className=\"p-6\">\n                <h4 className=\"font-semibold text-secondary-blue mb-3\">\n                  Offrez-vous une garantie sur vos travaux?\n                </h4>\n                <p className=\"text-neutral\">\n                  Absolument! Nous offrons une garantie de satisfaction complÃ¨te et \n                  une garantie matÃ©riaux selon les spifications du fabricant.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card data-testid=\"faq-4\">\n              <CardContent className=\"p-6\">\n                <h4 className=\"font-semibold text-secondary-blue mb-3\">\n                  Travaillez-vous en fin de semaine?\n                </h4>\n                <p className=\"text-neutral\">\n                  Nous travaillons du lundi au samedi. Les dimanches sont disponibles \n                  sur rendez-vous pour les projets urgents.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":10918},"client/src/pages/gallery.tsx":{"content":"import { useState } from \"react\";\nimport GalleryGrid from \"@/components/gallery-grid\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\n\nconst galleryCategories = [\n  { id: \"all\", name: \"Tous les Projets\" },\n  { id: \"interior\", name: \"Peinture IntÃ©rieure\" },\n  { id: \"exterior\", name: \"Peinture ExtÃ©rieure\" },\n  { id: \"renovation\", name: \"RÃ©novation\" },\n  { id: \"commercial\", name: \"Commercial\" }\n];\n\nexport default function Gallery() {\n  const [activeCategory, setActiveCategory] = useState(\"all\");\n  const [, setLocation] = useLocation();\n\n  const handleContact = () => {\n    setLocation(\"/contact\");\n  };\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"gallery-page\">\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-secondary-blue to-dark text-white\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h1 className=\"text-5xl md:text-6xl font-poppins font-bold mb-6\" data-testid=\"gallery-hero-title\">\n            Galerie de nos RÃ©alisations\n          </h1>\n          <p className=\"text-xl md:text-2xl max-w-3xl mx-auto leading-relaxed\">\n            DÃ©couvrez nos projets rÃ©cents et laissez-vous inspirer par notre savoir-faire exceptionnel\n          </p>\n        </div>\n      </section>\n\n      {/* Filter Categories */}\n      <section className=\"py-8 bg-white border-b\" data-testid=\"gallery-filters\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex flex-wrap justify-center gap-4\">\n            {galleryCategories.map((category) => (\n              <Button\n                key={category.id}\n                variant={activeCategory === category.id ? \"default\" : \"outline\"}\n                className={`\n                  ${activeCategory === category.id \n                    ? \"bg-primary-green hover:bg-primary-green/90\" \n                    : \"border-primary-green text-primary-green hover:bg-primary-green hover:text-white\"\n                  }\n                `}\n                onClick={() => setActiveCategory(category.id)}\n                data-testid={`filter-${category.id}`}\n              >\n                {category.name}\n              </Button>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Gallery Grid */}\n      <section className=\"py-20 bg-gray-50\" data-testid=\"gallery-grid-section\">\n        <div className=\"container mx-auto px-4\">\n          <GalleryGrid showAll={true} />\n        </div>\n      </section>\n\n      {/* Before/After Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"before-after-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-poppins font-bold text-secondary-blue mb-4\">\n              Avant / AprÃ¨s\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Voyez la transformation remarquable de nos projets\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h3 className=\"text-2xl font-poppins font-semibold text-secondary-blue mb-4\">\n                Transformation ComplÃ¨te\n              </h3>\n              <p className=\"text-lg text-neutral mb-6 leading-relaxed\">\n                Chaque projet raconte une histoire de transformation. De l'Ã©valuation initiale \n                Ã  la finition finale, nous documentons chaque Ã©tape pour vous montrer \n                l'Ã©volution remarquable de vos espaces.\n              </p>\n              <p className=\"text-lg text-neutral mb-8 leading-relaxed\">\n                Notre approche mÃ©ticuleuse garantit non seulement un rÃ©sultat esthÃ©tique \n                exceptionnel, mais aussi une durabilitÃ© qui rÃ©sistera Ã  l'Ã©preuve du temps.\n              </p>\n              <Button \n                className=\"bg-primary-green hover:bg-primary-green/90\"\n                onClick={handleContact}\n                data-testid=\"button-request-transformation\"\n              >\n                Demander une Transformation\n              </Button>\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <h4 className=\"font-semibold text-secondary-blue mb-2 text-center\">Avant</h4>\n                <img \n                  src=\"https://images.unsplash.com/photo-1484154218962-a197022b5858?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&h=300\"\n                  alt=\"Avant rÃ©novation\"\n                  className=\"rounded-lg shadow-lg w-full h-48 object-cover\"\n                />\n              </div>\n              <div>\n                <h4 className=\"font-semibold text-primary-green mb-2 text-center\">AprÃ¨s</h4>\n                <img \n                  src=\"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&h=300\"\n                  alt=\"AprÃ¨s rÃ©novation\"\n                  className=\"rounded-lg shadow-lg w-full h-48 object-cover\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials */}\n      <section className=\"py-20 bg-primary-green text-white\" data-testid=\"testimonials-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-poppins font-bold mb-4\">\n              Ce Que Disent Nos Clients\n            </h2>\n            <p className=\"text-xl max-w-2xl mx-auto\">\n              La satisfaction de nos clients est notre plus belle rÃ©compense\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <div className=\"bg-white bg-opacity-10 rounded-xl p-6 text-center\" data-testid=\"testimonial-1\">\n              <p className=\"text-lg mb-4 italic\">\n                \"Augustin et son Ã©quipe ont transformÃ© notre salon. Le rÃ©sultat dÃ©passe nos attentes!\"\n              </p>\n              <h4 className=\"font-semibold\">Marie L.</h4>\n              <p className=\"text-sm opacity-80\">Charlesbourg</p>\n            </div>\n            \n            <div className=\"bg-white bg-opacity-10 rounded-xl p-6 text-center\" data-testid=\"testimonial-2\">\n              <p className=\"text-lg mb-4 italic\">\n                \"Professionnel, ponctuel et d'une qualitÃ© irrÃ©prochable. Je recommande vivement!\"\n              </p>\n              <h4 className=\"font-semibold\">Jean-Pierre D.</h4>\n              <p className=\"text-sm opacity-80\">QuÃ©bec</p>\n            </div>\n            \n            <div className=\"bg-white bg-opacity-10 rounded-xl p-6 text-center\" data-testid=\"testimonial-3\">\n              <p className=\"text-lg mb-4 italic\">\n                \"Un service exceptionnel du devis Ã  la finition. Merci pour ce magnifique travail!\"\n              </p>\n              <h4 className=\"font-semibold\">Sophie M.</h4>\n              <p className=\"text-sm opacity-80\">Sainte-Foy</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-secondary-blue text-white\" data-testid=\"gallery-cta\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-4xl font-poppins font-bold mb-6\">\n            PrÃªt Ã  CrÃ©er Votre Propre Transformation?\n          </h2>\n          <p className=\"text-xl mb-8 max-w-2xl mx-auto\">\n            Contactez-nous dÃ¨s aujourd'hui pour discuter de votre projet et recevoir un devis personnalisÃ©\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button \n              size=\"lg\"\n              className=\"bg-primary-green hover:bg-primary-green/90 px-8 py-4 text-lg\"\n              onClick={handleContact}\n              data-testid=\"button-contact-cta\"\n            >\n              Obtenir un Devis\n            </Button>\n            <Button \n              variant=\"outline\"\n              size=\"lg\"\n              className=\"border-white text-white hover:bg-white hover:text-secondary-blue px-8 py-4 text-lg\"\n              onClick={() => setLocation(\"/services\")}\n              data-testid=\"button-services-cta\"\n            >\n              Voir nos Services\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":8455},"client/src/pages/home.tsx":{"content":"import HeroSection from \"@/components/hero-section\";\nimport ServicesShowcase from \"@/components/services-showcase\";\nimport GalleryGrid from \"@/components/gallery-grid\";\nimport ContactForm from \"@/components/contact-form\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Award, Clock, Leaf, Handshake, Phone, Mail, MapPin, CheckCircle } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\n\nexport default function Home() {\n  const [, setLocation] = useLocation();\n\n  const handleViewFullGallery = () => {\n    setLocation(\"/gallery\");\n  };\n\n  return (\n    <div className=\"min-h-screen\" data-testid=\"home-page\">\n      <HeroSection />\n      <ServicesShowcase />\n      \n      {/* About Section */}\n      <section className=\"py-20 bg-gray-50\" data-testid=\"about-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-4xl md:text-5xl font-poppins font-bold text-secondary-blue mb-6\">\n                Ã€ Propos d'AB-Peinture Pro\n              </h2>\n              <p className=\"text-lg text-neutral mb-6 leading-relaxed\">\n                DirigÃ©e par <strong className=\"text-secondary-blue\">Mbe nde Augustin</strong>, AB-Peinture Pro est votre partenaire de confiance \n                pour tous vos projets de peinture et de rÃ©novation Ã  QuÃ©bec. Avec des annÃ©es d'expÃ©rience \n                et un engagement envers l'excellence, nous transformons vos espaces avec passion et professionnalisme.\n              </p>\n              <p className=\"text-lg text-neutral mb-8 leading-relaxed\">\n                Notre devise \"Les Murs de Augustin\" reflÃ¨te notre approche personnalisÃ©e et notre attention \n                aux dÃ©tails. Chaque projet est unique et mÃ©rite une solution sur mesure.\n              </p>\n              \n              <div className=\"grid sm:grid-cols-2 gap-6 mb-8\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-12 h-12 bg-primary-green rounded-full flex items-center justify-center\">\n                    <Award className=\"text-white\" size={20} />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-secondary-blue\">QualitÃ© Garantie</h4>\n                    <p className=\"text-neutral text-sm\">Finitions impeccables</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-12 h-12 bg-accent-orange rounded-full flex items-center justify-center\">\n                    <Clock className=\"text-white\" size={20} />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-secondary-blue\">Respect des DÃ©lais</h4>\n                    <p className=\"text-neutral text-sm\">Projets livrÃ©s Ã  temps</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-12 h-12 bg-success-green rounded-full flex items-center justify-center\">\n                    <Leaf className=\"text-white\" size={20} />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-secondary-blue\">Ã‰co-responsable</h4>\n                    <p className=\"text-neutral text-sm\">Peintures Ã©cologiques</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-12 h-12 bg-secondary-blue rounded-full flex items-center justify-center\">\n                    <Handshake className=\"text-white\" size={20} />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-secondary-blue\">Service Client</h4>\n                    <p className=\"text-neutral text-sm\">Satisfaction garantie</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"space-y-6\">\n              <img \n                src=\"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\n                alt=\"Mbe nde Augustin - PropriÃ©taire AB-Peinture Pro\"\n                className=\"rounded-xl shadow-lg w-full\"\n              />\n              \n              <Card className=\"shadow-lg\">\n                <CardContent className=\"p-6\">\n                  <h3 className=\"text-xl font-poppins font-semibold text-secondary-blue mb-4\">Nos CoordonnÃ©es</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center space-x-3\" data-testid=\"contact-address\">\n                      <MapPin className=\"text-primary-green\" size={20} />\n                      <span className=\"text-neutral\">3637 rue des sureaux, Charlesbourg, QuÃ©bec G1G1Z7</span>\n                    </div>\n                    <div className=\"flex items-center space-x-3\" data-testid=\"contact-phone\">\n                      <Phone className=\"text-primary-green\" size={20} />\n                      <span className=\"text-neutral\">(418) 473-6433</span>\n                    </div>\n                    <div className=\"flex items-center space-x-3\" data-testid=\"contact-email\">\n                      <Mail className=\"text-primary-green\" size={20} />\n                      <span className=\"text-neutral\">augustinmbende82@yahoo.com</span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Gallery Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"gallery-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-poppins font-bold text-secondary-blue mb-4\">\n              Galerie de nos RÃ©alisations\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              DÃ©couvrez quelques-uns de nos projets rÃ©cents et laissez-vous inspirer par notre savoir-faire\n            </p>\n          </div>\n\n          <GalleryGrid />\n          \n          <div className=\"text-center mt-12\">\n            <Button \n              className=\"bg-primary-green hover:bg-primary-green/90 text-white px-8 py-4 text-lg font-semibold transition-all\"\n              onClick={handleViewFullGallery}\n              data-testid=\"button-view-full-gallery\"\n            >\n              Voir Plus de RÃ©alisations\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Section */}\n      <section className=\"py-20 bg-secondary-blue text-white\" data-testid=\"contact-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-poppins font-bold mb-4\">\n              Contactez-nous\n            </h2>\n            <p className=\"text-xl max-w-2xl mx-auto\">\n              PrÃªt Ã  transformer vos espaces? Obtenez votre devis gratuit dÃ¨s aujourd'hui\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12\">\n            <div className=\"bg-white rounded-xl p-8\">\n              <ContactForm />\n            </div>\n\n            <div className=\"space-y-8\">\n              <div>\n                <h3 className=\"text-2xl font-poppins font-semibold mb-6\">Informations de Contact</h3>\n                \n                <div className=\"space-y-6\">\n                  <div className=\"flex items-start space-x-4\">\n                    <div className=\"w-12 h-12 bg-primary-green rounded-full flex items-center justify-center flex-shrink-0\">\n                      <MapPin className=\"text-white\" size={20} />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-lg mb-2\">Adresse</h4>\n                      <p className=\"text-gray-300\">\n                        3637 rue des sureaux<br/>\n                        Charlesbourg, QuÃ©bec<br/>\n                        G1G1Z7\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-4\">\n                    <div className=\"w-12 h-12 bg-accent-orange rounded-full flex items-center justify-center flex-shrink-0\">\n                      <Phone className=\"text-white\" size={20} />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-lg mb-2\">TÃ©lÃ©phone</h4>\n                      <p className=\"text-gray-300\">(418) 473-6433</p>\n                      <p className=\"text-sm text-gray-400\">Lun-Ven: 8h00-18h00</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-4\">\n                    <div className=\"w-12 h-12 bg-success-green rounded-full flex items-center justify-center flex-shrink-0\">\n                      <Mail className=\"text-white\" size={20} />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-lg mb-2\">Email</h4>\n                      <p className=\"text-gray-300\">augustinmbende82@yahoo.com</p>\n                      <p className=\"text-sm text-gray-400\">RÃ©ponse sous 24h</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <Card className=\"bg-white bg-opacity-10 border-0\">\n                <CardContent className=\"p-6\">\n                  <h4 className=\"font-poppins font-semibold text-lg mb-4\">Pourquoi Choisir AB-Peinture Pro?</h4>\n                  <ul className=\"space-y-3 text-gray-300\">\n                    <li className=\"flex items-center space-x-3\">\n                      <CheckCircle className=\"text-primary-green\" size={20} />\n                      <span>Devis gratuit et dÃ©taillÃ©</span>\n                    </li>\n                    <li className=\"flex items-center space-x-3\">\n                      <CheckCircle className=\"text-primary-green\" size={20} />\n                      <span>MatÃ©riaux de qualitÃ© supÃ©rieure</span>\n                    </li>\n                    <li className=\"flex items-center space-x-3\">\n                      <CheckCircle className=\"text-primary-green\" size={20} />\n                      <span>Ã‰quipe expÃ©rimentÃ©e et assurÃ©e</span>\n                    </li>\n                    <li className=\"flex items-center space-x-3\">\n                      <CheckCircle className=\"text-primary-green\" size={20} />\n                      <span>Satisfaction client garantie</span>\n                    </li>\n                  </ul>\n                </CardContent>\n              </Card>\n              \n              <div className=\"text-center\">\n                <p className=\"text-xl font-poppins font-semibold text-primary-green mb-2\">\n                  Urgence 24/7\n                </p>\n                <p className=\"text-gray-300\">\n                  Pour les projets urgents, n'hÃ©sitez pas Ã  nous appeler\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":11394},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/services.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Home, \n  Layers, \n  Calculator, \n  Lightbulb, \n  Wrench, \n  Hammer, \n  Palette, \n  Construction, \n  Box, \n  Settings, \n  Scissors, \n  Zap, \n  Crown \n} from \"lucide-react\";\nimport { useLocation } from \"wouter\";\n\nconst mainServices = [\n  {\n    icon: Home,\n    title: \"Peinture RÃ©sidentielle IntÃ©rieure\",\n    description: \"Transformez vos espaces de vie avec notre expertise en peinture intÃ©rieure. Finitions impeccables garanties.\",\n    features: [\"PrÃ©paration des surfaces\", \"Choix de couleurs expert\", \"Finitions de qualitÃ©\"]\n  },\n  {\n    icon: Layers,\n    title: \"Nettoyage et Pose de RevÃªtement Muraux\",\n    description: \"Nettoyage professionnel et pose experte de tous types de revÃªtements muraux pour un rendu exceptionnel.\",\n    features: [\"Nettoyage professionnel\", \"Pose experte\", \"Tous types de revÃªtements\"]\n  },\n  {\n    icon: Calculator,\n    title: \"Estimation\",\n    description: \"Ã‰valuation prÃ©cise et transparente de vos projets. Devis dÃ©taillÃ© gratuit sous 24h.\",\n    features: [\"Devis gratuit\", \"Ã‰valuation prÃ©cise\", \"RÃ©ponse sous 24h\"]\n  },\n  {\n    icon: Lightbulb,\n    title: \"Conseil\",\n    description: \"Accompagnement personnalisÃ© dans le choix des couleurs, finitions et techniques adaptÃ©es Ã  vos besoins.\",\n    features: [\"Conseil personnalisÃ©\", \"Choix de couleurs\", \"Techniques adaptÃ©es\"]\n  },\n  {\n    icon: Wrench,\n    title: \"Tirage des Joints\",\n    description: \"Finition parfaite des joints de gypse pour des surfaces lisses et prÃªtes Ã  recevoir la peinture.\",\n    features: [\"Joints de gypse\", \"Surfaces lisses\", \"PrÃ©paration optimale\"]\n  }\n];\n\nconst additionalServices = [\n  {\n    icon: Hammer,\n    title: \"RÃ©novation IntÃ©rieure\",\n    description: \"Salon, cuisine, sous-sol - transformation complÃ¨te de vos espaces de vie\",\n    features: [\"RÃ©novation de salon\", \"RÃ©novation de cuisine\", \"AmÃ©nagement de sous-sol\"]\n  },\n  {\n    icon: Layers,\n    title: \"Sablage et Vernissage\",\n    description: \"Restauration et protection de vos planchers de bois\",\n    features: [\"Sablage professionnel\", \"Vernissage de qualitÃ©\", \"Restauration complÃ¨te\"]\n  },\n  {\n    icon: Palette,\n    title: \"CrÃ©py Acrylique\",\n    description: \"Finition texturÃ©e moderne pour vos murs intÃ©rieurs et extÃ©rieurs\",\n    features: [\"Application professionnelle\", \"DiffÃ©rentes textures\", \"DurabilitÃ© garantie\"]\n  },\n  {\n    icon: Construction,\n    title: \"RevÃªtement d'Ã‰poxy\",\n    description: \"Protection durable pour terrasses en bÃ©ton et escaliers\",\n    features: [\"Terrasses en bÃ©ton\", \"Escaliers extÃ©rieurs\", \"RÃ©sistance aux intempÃ©ries\"]\n  },\n  {\n    icon: Box,\n    title: \"Fabrication de Patio\",\n    description: \"Conception et construction de patios sur mesure\",\n    features: [\"Design personnalisÃ©\", \"Construction complÃ¨te\", \"MatÃ©riaux de qualitÃ©\"]\n  },\n  {\n    icon: Settings,\n    title: \"Travaux de Plomberie\",\n    description: \"Services de plomberie gÃ©nÃ©rale et dÃ©bouchage\",\n    features: [\"RÃ©parations diverses\", \"DÃ©bouchage des drains\", \"Installation sanitaire\"]\n  },\n  {\n    icon: Scissors,\n    title: \"Menuiserie et Charpenterie\",\n    description: \"Travaux de bois sur mesure et charpenterie\",\n    features: [\"Menuiserie fine\", \"Charpenterie gÃ©nÃ©rale\", \"RÃ©parations structurelles\"]\n  },\n  {\n    icon: Zap,\n    title: \"Travaux d'Ã‰lectricitÃ©\",\n    description: \"Installation et rÃ©paration Ã©lectrique professionnelle\",\n    features: [\"Installation de prises\", \"Ã‰clairage moderne\", \"Mise aux normes\"]\n  }\n];\n\nexport default function Services() {\n  const [, setLocation] = useLocation();\n\n  const handleContactForProject = () => {\n    setLocation(\"/contact\");\n  };\n\n  const handleServiceDetails = (serviceName: string) => {\n    const serviceRoutes: { [key: string]: string } = {\n      \"Peinture RÃ©sidentielle IntÃ©rieure\": \"/services/peinture-interieure\",\n      \"Nettoyage et Pose de RevÃªtement Muraux\": \"/services/revetements-muraux\", \n      \"Estimation\": \"/services/estimation-gratuite\",\n      \"Conseil\": \"/services/conseil-expert\",\n      \"Tirage des Joints\": \"/services/tirage-joints\"\n    };\n    setLocation(serviceRoutes[serviceName] || \"/services\");\n  };\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"services-page\">\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-secondary-blue to-dark text-white\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h1 className=\"text-5xl md:text-6xl font-poppins font-bold mb-6\" data-testid=\"services-hero-title\">\n            Nos Services\n          </h1>\n          <p className=\"text-xl md:text-2xl max-w-3xl mx-auto leading-relaxed\">\n            Une gamme complÃ¨te de services pour tous vos besoins en peinture, rÃ©novation et finition\n          </p>\n        </div>\n      </section>\n\n      {/* Main Services */}\n      <section className=\"py-20 bg-white\" data-testid=\"main-services-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-poppins font-bold text-secondary-blue mb-4\">\n              Services Principaux\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Nos services de base pour tous vos projets de peinture\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {mainServices.map((service, index) => {\n              const IconComponent = service.icon;\n              return (\n                <Card key={index} className=\"hover:shadow-xl transition-shadow\" data-testid={`main-service-${index}`}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center mb-4\">\n                      <IconComponent className=\"text-primary-green text-2xl mr-3\" size={24} />\n                      <h3 className=\"text-xl font-poppins font-semibold text-secondary-blue\">{service.title}</h3>\n                    </div>\n                    <p className=\"text-neutral mb-4\">{service.description}</p>\n                    <ul className=\"text-sm text-neutral space-y-1 mb-4\">\n                      {service.features.map((feature, idx) => (\n                        <li key={idx}>â€¢ {feature}</li>\n                      ))}\n                    </ul>\n                    <Button \n                      variant=\"link\" \n                      className=\"text-primary-green font-semibold hover:text-secondary-blue p-0\"\n                      onClick={() => handleServiceDetails(service.title)}\n                      data-testid={`button-service-details-${index}`}\n                    >\n                      En savoir plus â†’\n                    </Button>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Additional Services */}\n      <section className=\"py-20 bg-gray-50\" data-testid=\"additional-services-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-poppins font-bold text-secondary-blue mb-4\">\n              Services ComplÃ©mentaires\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Une gamme Ã©tendue de services pour tous vos besoins en rÃ©novation\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {additionalServices.map((service, index) => {\n              const IconComponent = service.icon;\n              return (\n                <Card key={index} className=\"hover:shadow-xl transition-shadow\" data-testid={`additional-service-${index}`}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center mb-4\">\n                      <IconComponent className=\"text-primary-green text-2xl mr-3\" size={24} />\n                      <h3 className=\"text-xl font-poppins font-semibold text-secondary-blue\">{service.title}</h3>\n                    </div>\n                    <p className=\"text-neutral mb-4\">{service.description}</p>\n                    <ul className=\"text-sm text-neutral space-y-1\">\n                      {service.features.map((feature, idx) => (\n                        <li key={idx}>â€¢ {feature}</li>\n                      ))}\n                    </ul>\n                  </CardContent>\n                </Card>\n              );\n            })}\n\n            {/* Premium Service */}\n            <Card className=\"bg-gradient-to-br from-primary-green to-secondary-blue text-white hover:shadow-xl transition-shadow\" data-testid=\"premium-service\">\n              <CardContent className=\"p-6 text-center\">\n                <Crown className=\"text-4xl mb-4 text-accent-orange mx-auto\" size={48} />\n                <h3 className=\"text-xl font-poppins font-semibold mb-4\">Service Complet</h3>\n                <p className=\"mb-6\">Projet complexe? Nous gÃ©rons tout de A Ã  Z</p>\n                <Button \n                  className=\"bg-white text-secondary-blue hover:bg-gray-100\"\n                  onClick={handleContactForProject}\n                  data-testid=\"button-complex-project\"\n                >\n                  Discuter de votre Projet\n                </Button>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-primary-green text-white\" data-testid=\"services-cta\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-4xl font-poppins font-bold mb-6\">\n            PrÃªt Ã  Commencer Votre Projet?\n          </h2>\n          <p className=\"text-xl mb-8 max-w-2xl mx-auto\">\n            Contactez-nous dÃ¨s aujourd'hui pour un devis gratuit et personnalisÃ©\n          </p>\n          <Button \n            size=\"lg\"\n            className=\"bg-white text-primary-green hover:bg-gray-100 px-8 py-4 text-lg font-semibold\"\n            onClick={handleContactForProject}\n            data-testid=\"button-get-quote-cta\"\n          >\n            Obtenir un Devis Gratuit\n          </Button>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":10299},"client/src/components/layout/footer.tsx":{"content":"import { PaintbrushVertical, Phone, Mail, MapPin, Facebook, Instagram, Linkedin } from \"lucide-react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-dark text-gray-300 py-12\" data-testid=\"footer\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid md:grid-cols-3 gap-8\">\n          <div>\n            <div className=\"flex items-center space-x-2 mb-4\">\n              <div className=\"w-8 h-8 bg-primary-green rounded-full flex items-center justify-center\">\n                <PaintbrushVertical className=\"text-white\" size={16} />\n              </div>\n              <h3 className=\"text-xl font-poppins font-bold text-white\">AB-Peinture Pro</h3>\n            </div>\n            <p className=\"mb-4 text-gray-400\">\n              \"Les Murs de Augustin\" - Votre expert en peinture et rÃ©novation Ã  QuÃ©bec. \n              QualitÃ©, professionnalisme et satisfaction garantie.\n            </p>\n            <p className=\"text-sm text-gray-500\">\n              Â© 2024 AB-Peinture Pro. Tous droits rÃ©servÃ©s.\n            </p>\n          </div>\n          \n          <div>\n            <h4 className=\"text-lg font-semibold text-white mb-4\">Services Rapides</h4>\n            <ul className=\"space-y-2 text-sm\">\n              <li>\n                <a href=\"/services\" className=\"hover:text-primary-green transition-colors\" data-testid=\"footer-link-interior\">\n                  Peinture IntÃ©rieure\n                </a>\n              </li>\n              <li>\n                <a href=\"/services\" className=\"hover:text-primary-green transition-colors\" data-testid=\"footer-link-exterior\">\n                  Peinture ExtÃ©rieure\n                </a>\n              </li>\n              <li>\n                <a href=\"/services\" className=\"hover:text-primary-green transition-colors\" data-testid=\"footer-link-renovation\">\n                  RÃ©novation\n                </a>\n              </li>\n              <li>\n                <a href=\"/contact\" className=\"hover:text-primary-green transition-colors\" data-testid=\"footer-link-estimate\">\n                  Estimation Gratuite\n                </a>\n              </li>\n              <li>\n                <a href=\"/contact\" className=\"hover:text-primary-green transition-colors\" data-testid=\"footer-link-consultation\">\n                  Conseil Expert\n                </a>\n              </li>\n            </ul>\n          </div>\n          \n          <div>\n            <h4 className=\"text-lg font-semibold text-white mb-4\">Contact Rapide</h4>\n            <div className=\"space-y-3 text-sm\">\n              <div className=\"flex items-center space-x-2\" data-testid=\"footer-phone\">\n                <Phone className=\"text-primary-green\" size={16} />\n                <span>(418) 473-6433</span>\n              </div>\n              <div className=\"flex items-center space-x-2\" data-testid=\"footer-email\">\n                <Mail className=\"text-primary-green\" size={16} />\n                <span>augustinmbende82@yahoo.com</span>\n              </div>\n              <div className=\"flex items-center space-x-2\" data-testid=\"footer-address\">\n                <MapPin className=\"text-primary-green\" size={16} />\n                <span>Charlesbourg, QuÃ©bec</span>\n              </div>\n            </div>\n            \n            <div className=\"mt-6\">\n              <p className=\"text-white font-semibold mb-2\">Suivez-nous</p>\n              <div className=\"flex space-x-4\">\n                <a href=\"#\" className=\"text-gray-400 hover:text-primary-green transition-colors\" data-testid=\"social-facebook\">\n                  <Facebook size={20} />\n                </a>\n                <a href=\"#\" className=\"text-gray-400 hover:text-primary-green transition-colors\" data-testid=\"social-instagram\">\n                  <Instagram size={20} />\n                </a>\n                <a href=\"#\" className=\"text-gray-400 hover:text-primary-green transition-colors\" data-testid=\"social-linkedin\">\n                  <Linkedin size={20} />\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-gray-700 mt-8 pt-8 text-center text-sm text-gray-500\">\n          <p>ConÃ§u avec passion pour AB-Peinture Pro - \"Les Murs de Augustin\"</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":4304},"client/src/components/layout/header.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Menu, X, PaintbrushVertical } from \"lucide-react\";\n\nexport default function Header() {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [location] = useLocation();\n\n  const navigation = [\n    { name: \"Accueil\", href: \"/\" },\n    { name: \"Services\", href: \"/services\" },\n    { name: \"Ã€ Propos\", href: \"/about\" },\n    { name: \"Galerie\", href: \"/gallery\" },\n    { name: \"Contact\", href: \"/contact\" },\n  ];\n\n  const isActive = (href: string) => {\n    if (href === \"/\" && location === \"/\") return true;\n    if (href !== \"/\" && location.startsWith(href)) return true;\n    return false;\n  };\n\n  return (\n    <header className=\"bg-white shadow-lg fixed w-full top-0 z-50\" data-testid=\"header\">\n      <nav className=\"container mx-auto px-4 py-4\">\n        <div className=\"flex justify-between items-center\">\n          <Link href=\"/\" className=\"flex items-center space-x-2\" data-testid=\"logo-link\">\n            <div className=\"w-10 h-10 bg-primary-green rounded-full flex items-center justify-center\">\n              <PaintbrushVertical className=\"text-white text-lg\" />\n            </div>\n            <h1 className=\"text-2xl font-poppins font-bold text-secondary-blue\">\n              AB-Peinture Pro\n            </h1>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex space-x-8\">\n            {navigation.map((item) => (\n              <Link key={item.name} href={item.href}>\n                <a\n                  className={`font-medium transition-colors hover:text-primary-green ${\n                    isActive(item.href)\n                      ? \"text-primary-green\"\n                      : \"text-neutral\"\n                  }`}\n                  data-testid={`nav-link-${item.name.toLowerCase()}`}\n                >\n                  {item.name}\n                </a>\n              </Link>\n            ))}\n          </div>\n\n          {/* Mobile Menu Button */}\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"md:hidden\"\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n            data-testid=\"mobile-menu-button\"\n          >\n            {isMobileMenuOpen ? (\n              <X className=\"h-6 w-6\" />\n            ) : (\n              <Menu className=\"h-6 w-6\" />\n            )}\n          </Button>\n        </div>\n\n        {/* Mobile Navigation */}\n        {isMobileMenuOpen && (\n          <div className=\"md:hidden mt-4 pb-4 border-t border-gray-200\" data-testid=\"mobile-menu\">\n            <div className=\"flex flex-col space-y-4 mt-4\">\n              {navigation.map((item) => (\n                <Link key={item.name} href={item.href}>\n                  <a\n                    className={`font-medium transition-colors hover:text-primary-green ${\n                      isActive(item.href)\n                        ? \"text-primary-green\"\n                        : \"text-neutral\"\n                    }`}\n                    onClick={() => setIsMobileMenuOpen(false)}\n                    data-testid={`mobile-nav-link-${item.name.toLowerCase()}`}\n                  >\n                    {item.name}\n                  </a>\n                </Link>\n              ))}\n            </div>\n          </div>\n        )}\n      </nav>\n    </header>\n  );\n}\n","size_bytes":3397},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/services/conseil-expert.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { useLocation } from \"wouter\";\nimport { Lightbulb, Palette, Users, Award, CheckCircle, Star } from \"lucide-react\";\n\nexport default function ConseilExpert() {\n  const [, setLocation] = useLocation();\n\n  const handleContact = () => {\n    setLocation(\"/contact\");\n  };\n\n  const consultingServices = [\n    {\n      icon: Palette,\n      title: \"Choix des Couleurs\",\n      description: \"SÃ©lection experte des couleurs selon vos goÃ»ts et l'Ã©clairage naturel\"\n    },\n    {\n      icon: Award,\n      title: \"Finitions AdaptÃ©es\",\n      description: \"Recommandation des meilleures finitions selon l'usage de chaque piÃ¨ce\"\n    },\n    {\n      icon: Users,\n      title: \"Accompagnement PersonnalisÃ©\",\n      description: \"Conseil individualisÃ© adaptÃ© Ã  votre style de vie et budget\"\n    }\n  ];\n\n  const expertiseAreas = [\n    \"Harmonisation des couleurs\",\n    \"Choix de finitions (mat, satin, brillant)\",\n    \"Techniques de peinture spÃ©cialisÃ©es\",\n    \"Coordination avec votre dÃ©coration\",\n    \"Optimisation de la luminositÃ©\",\n    \"Tendances et styles contemporains\",\n    \"Solutions pour piÃ¨ces difficiles\",\n    \"Conseils d'entretien durable\"\n  ];\n\n  const benefits = [\n    {\n      title: \"Ã‰vitez les Erreurs CoÃ»teuses\",\n      description: \"Nos conseils vous Ã©vitent les mauvais choix et les retouches\"\n    },\n    {\n      title: \"RÃ©sultat Professionnel\",\n      description: \"BÃ©nÃ©ficiez de l'Å“il expert d'Augustin pour un rendu harmonieux\"\n    },\n    {\n      title: \"Gain de Temps\",\n      description: \"Trouvez rapidement les bonnes solutions grÃ¢ce Ã  notre expÃ©rience\"\n    },\n    {\n      title: \"Satisfaction Garantie\",\n      description: \"Un conseil personnalisÃ© pour un rÃ©sultat qui vous ressemble\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"conseil-expert-page\">\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-secondary-blue to-dark text-white\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h1 className=\"text-5xl md:text-6xl font-poppins font-bold mb-6\" data-testid=\"service-title\">\n                Conseil Expert\n              </h1>\n              <p className=\"text-xl mb-8 leading-relaxed\">\n                Accompagnement personnalisÃ© par Augustin dans le choix des couleurs, \n                finitions et techniques adaptÃ©es Ã  vos besoins spÃ©cifiques.\n              </p>\n              <Button \n                size=\"lg\"\n                className=\"bg-primary-green hover:bg-primary-green/90 px-8 py-4 text-lg\"\n                onClick={handleContact}\n                data-testid=\"button-get-consultation\"\n              >\n                RÃ©server une Consultation\n              </Button>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\n                alt=\"Augustin - Expert en conseil peinture\"\n                className=\"rounded-xl shadow-2xl w-full\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Services Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"services-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-4\">\n              Nos Services de Conseil\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              L'expertise d'Augustin au service de vos projets de dÃ©coration\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {consultingServices.map((service, index) => {\n              const IconComponent = service.icon;\n              return (\n                <Card key={index} className=\"text-center hover:shadow-xl transition-shadow\" data-testid={`service-${index}`}>\n                  <CardContent className=\"p-8\">\n                    <IconComponent className=\"text-primary-green mx-auto mb-6\" size={48} />\n                    <h3 className=\"text-xl font-poppins font-semibold text-secondary-blue mb-4\">\n                      {service.title}\n                    </h3>\n                    <p className=\"text-neutral\">\n                      {service.description}\n                    </p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Expertise Areas Section */}\n      <section className=\"py-20 bg-gray-50\" data-testid=\"expertise-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-4\">\n              Domaines d'Expertise\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Augustin vous guide dans tous les aspects de votre projet peinture\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {expertiseAreas.map((area, index) => (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow\" data-testid={`expertise-${index}`}>\n                <CardContent className=\"p-4 flex items-center space-x-3\">\n                  <CheckCircle className=\"text-primary-green\" size={20} />\n                  <span className=\"text-neutral font-medium text-sm\">{area}</span>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Benefits Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"benefits-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-4\">\n              Pourquoi Faire Appel Ã  un Expert\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Les avantages d'un conseil professionnel pour votre projet\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            {benefits.map((benefit, index) => (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow\" data-testid={`benefit-${index}`}>\n                <CardContent className=\"p-6\">\n                  <h3 className=\"text-lg font-poppins font-semibold text-secondary-blue mb-3\">\n                    {benefit.title}\n                  </h3>\n                  <p className=\"text-neutral\">\n                    {benefit.description}\n                  </p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Process Section */}\n      <section className=\"py-20 bg-primary-green text-white\" data-testid=\"process-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold mb-4\">\n              Comment Se DÃ©roule une Consultation\n            </h2>\n            <p className=\"text-xl max-w-2xl mx-auto\">\n              Un processus structurÃ© pour vous donner les meilleurs conseils\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {[\n              {\n                step: \"1\",\n                title: \"Analyse des Lieux\",\n                description: \"Visite et Ã©valuation de vos espaces et de l'Ã©clairage\"\n              },\n              {\n                step: \"2\", \n                title: \"Ã‰coute de vos Besoins\",\n                description: \"Discussion sur vos goÃ»ts, style de vie et budget\"\n              },\n              {\n                step: \"3\",\n                title: \"Propositions AdaptÃ©es\",\n                description: \"PrÃ©sentation de solutions personnalisÃ©es\"\n              },\n              {\n                step: \"4\",\n                title: \"Plan d'Action\",\n                description: \"Remise d'un plan dÃ©taillÃ© avec recommandations\"\n              }\n            ].map((process, index) => (\n              <Card key={index} className=\"bg-white bg-opacity-10 border-0 text-center\" data-testid={`process-${index}`}>\n                <CardContent className=\"p-6\">\n                  <div className=\"w-12 h-12 bg-accent-orange text-secondary-blue rounded-full flex items-center justify-center mx-auto mb-4 text-xl font-bold\">\n                    {process.step}\n                  </div>\n                  <h3 className=\"text-lg font-poppins font-semibold mb-3\">\n                    {process.title}\n                  </h3>\n                  <p className=\"text-sm opacity-90\">\n                    {process.description}\n                  </p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"testimonials-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-4\">\n              Ce Que Disent Nos Clients\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              TÃ©moignages sur nos services de conseil\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {[\n              {\n                text: \"Augustin a su comprendre exactement ce que nous voulions. Ses conseils ont transformÃ© notre salon!\",\n                author: \"Marie-Claire D.\",\n                location: \"Charlesbourg\"\n              },\n              {\n                text: \"GrÃ¢ce aux conseils d'Augustin, nous avons Ã©vitÃ© plusieurs erreurs coÃ»teuses. Un vrai professionnel!\",\n                author: \"Jean-FranÃ§ois L.\",\n                location: \"QuÃ©bec\"\n              },\n              {\n                text: \"Son expertise en couleurs est remarquable. Il a crÃ©Ã© une harmonie parfaite dans toute la maison.\",\n                author: \"Sophie R.\",\n                location: \"Sainte-Foy\"\n              }\n            ].map((testimonial, index) => (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow\" data-testid={`testimonial-${index}`}>\n                <CardContent className=\"p-6 text-center\">\n                  <Star className=\"text-accent-orange mx-auto mb-4\" size={24} />\n                  <p className=\"text-neutral mb-4 italic\">\"{testimonial.text}\"</p>\n                  <h4 className=\"font-semibold text-secondary-blue\">{testimonial.author}</h4>\n                  <p className=\"text-sm text-gray-500\">{testimonial.location}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-secondary-blue text-white\" data-testid=\"cta-section\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-4xl font-poppins font-bold mb-6\">\n            PrÃªt Ã  BÃ©nÃ©ficier de Nos Conseils d'Expert?\n          </h2>\n          <p className=\"text-xl mb-8 max-w-2xl mx-auto\">\n            Contactez Augustin aujourd'hui pour une consultation personnalisÃ©e\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button \n              size=\"lg\"\n              className=\"bg-primary-green hover:bg-primary-green/90 px-8 py-4 text-lg\"\n              onClick={handleContact}\n              data-testid=\"button-contact-cta\"\n            >\n              RÃ©server une Consultation\n            </Button>\n            <Button \n              variant=\"outline\"\n              size=\"lg\"\n              className=\"border-white text-white hover:bg-white hover:text-secondary-blue px-8 py-4 text-lg\"\n              onClick={() => setLocation(\"/services\")}\n              data-testid=\"button-all-services\"\n            >\n              Voir Tous nos Services\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":12399},"client/src/pages/services/estimation-gratuite.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { useLocation } from \"wouter\";\nimport { Calculator, CheckCircle, Clock, FileText, Users, Star } from \"lucide-react\";\nimport ContactForm from \"@/components/contact-form\";\n\nexport default function EstimationGratuite() {\n  const [, setLocation] = useLocation();\n\n  const handleContact = () => {\n    setLocation(\"/contact\");\n  };\n\n  const estimationFeatures = [\n    {\n      icon: FileText,\n      title: \"Devis DÃ©taillÃ©\",\n      description: \"Estimation complÃ¨te avec dÃ©tail des matÃ©riaux et main d'Å“uvre\"\n    },\n    {\n      icon: Clock,\n      title: \"RÃ©ponse Rapide\",\n      description: \"Devis fourni sous 24h maximum aprÃ¨s la visite\"\n    },\n    {\n      icon: Users,\n      title: \"Conseil PersonnalisÃ©\",\n      description: \"Recommandations adaptÃ©es Ã  vos besoins et votre budget\"\n    },\n    {\n      icon: Star,\n      title: \"Sans Engagement\",\n      description: \"Estimation gratuite sans obligation d'achat\"\n    }\n  ];\n\n  const processSteps = [\n    {\n      step: \"1\",\n      title: \"Demande d'Estimation\",\n      description: \"Remplissez notre formulaire ou appelez-nous directement\"\n    },\n    {\n      step: \"2\",\n      title: \"Visite Gratuite\",\n      description: \"Augustin se dÃ©place chez vous pour Ã©valuer vos besoins\"\n    },\n    {\n      step: \"3\",\n      title: \"Analyse ComplÃ¨te\",\n      description: \"Ã‰tude dÃ©taillÃ©e de vos surfaces et de vos exigences\"\n    },\n    {\n      step: \"4\",\n      title: \"Devis PersonnalisÃ©\",\n      description: \"Remise d'un devis dÃ©taillÃ© adaptÃ© Ã  votre projet\"\n    }\n  ];\n\n  const includedServices = [\n    \"Ã‰valuation complÃ¨te des surfaces\",\n    \"Conseil sur le choix des couleurs\",\n    \"Recommandation des matÃ©riaux\",\n    \"Estimation du temps de rÃ©alisation\",\n    \"Planification des Ã©tapes\",\n    \"Conseils d'entretien\"\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"estimation-gratuite-page\">\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-secondary-blue to-dark text-white\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h1 className=\"text-5xl md:text-6xl font-poppins font-bold mb-6\" data-testid=\"service-title\">\n                Estimation Gratuite\n              </h1>\n              <p className=\"text-xl mb-8 leading-relaxed\">\n                Obtenez une Ã©valuation prÃ©cise et transparente de vos projets. \n                Devis dÃ©taillÃ© gratuit sous 24h par \"Les Murs de Augustin\".\n              </p>\n              <Button \n                size=\"lg\"\n                className=\"bg-primary-green hover:bg-primary-green/90 px-8 py-4 text-lg\"\n                onClick={handleContact}\n                data-testid=\"button-request-estimate\"\n              >\n                Demander une Estimation\n              </Button>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1519085360753-af0119f7cbe7?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\n                alt=\"Expert effectuant une estimation\"\n                className=\"rounded-xl shadow-2xl w-full\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"features-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-4\">\n              Pourquoi Choisir Notre Service d'Estimation\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Une approche professionnelle pour vous donner toutes les informations nÃ©cessaires\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {estimationFeatures.map((feature, index) => {\n              const IconComponent = feature.icon;\n              return (\n                <Card key={index} className=\"text-center hover:shadow-xl transition-shadow\" data-testid={`feature-${index}`}>\n                  <CardContent className=\"p-6\">\n                    <IconComponent className=\"text-primary-green mx-auto mb-4\" size={40} />\n                    <h3 className=\"text-lg font-poppins font-semibold text-secondary-blue mb-3\">\n                      {feature.title}\n                    </h3>\n                    <p className=\"text-neutral text-sm\">\n                      {feature.description}\n                    </p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Process Section */}\n      <section className=\"py-20 bg-gray-50\" data-testid=\"process-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-4\">\n              Comment Ã‡a Fonctionne\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Un processus simple et efficace pour obtenir votre estimation\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {processSteps.map((process, index) => (\n              <Card key={index} className=\"text-center hover:shadow-lg transition-shadow\" data-testid={`process-${index}`}>\n                <CardContent className=\"p-6\">\n                  <div className=\"w-16 h-16 bg-primary-green text-white rounded-full flex items-center justify-center mx-auto mb-4 text-2xl font-bold\">\n                    {process.step}\n                  </div>\n                  <h3 className=\"text-lg font-poppins font-semibold text-secondary-blue mb-3\">\n                    {process.title}\n                  </h3>\n                  <p className=\"text-neutral text-sm\">\n                    {process.description}\n                  </p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Included Services Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"included-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-6\">\n                Ce Qui Est Inclus\n              </h2>\n              <p className=\"text-xl text-neutral mb-8\">\n                Notre service d'estimation gratuite comprend une Ã©valuation complÃ¨te \n                de votre projet pour vous permettre de prendre une dÃ©cision Ã©clairÃ©e.\n              </p>\n              <div className=\"space-y-4\">\n                {includedServices.map((service, index) => (\n                  <div key={index} className=\"flex items-center space-x-3\" data-testid={`included-${index}`}>\n                    <CheckCircle className=\"text-primary-green\" size={24} />\n                    <span className=\"text-neutral font-medium\">{service}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\n                alt=\"Professionnel donnant des conseils\"\n                className=\"rounded-xl shadow-lg w-full\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Form Section */}\n      <section className=\"py-20 bg-secondary-blue text-white\" data-testid=\"contact-form-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold mb-4\">\n              Demandez Votre Estimation Gratuite\n            </h2>\n            <p className=\"text-xl max-w-2xl mx-auto\">\n              Remplissez le formulaire ci-dessous et Augustin vous contactera sous 24h\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12\">\n            <div className=\"bg-white rounded-xl p-8\">\n              <ContactForm />\n            </div>\n            \n            <div className=\"space-y-8\">\n              <Card className=\"bg-white bg-opacity-10 border-0\">\n                <CardContent className=\"p-6\">\n                  <Calculator className=\"text-primary-green mb-4\" size={32} />\n                  <h4 className=\"font-poppins font-semibold text-xl mb-4\">Estimation Professionnelle</h4>\n                  <p className=\"mb-4\">\n                    Augustin utilise son expertise de plus de 10 ans pour vous fournir \n                    une estimation prÃ©cise et rÃ©aliste de votre projet.\n                  </p>\n                  <ul className=\"text-sm space-y-2 opacity-90\">\n                    <li>â€¢ Ã‰valuation sur site gratuite</li>\n                    <li>â€¢ Devis dÃ©taillÃ© sous 24h</li>\n                    <li>â€¢ Conseils personnalisÃ©s inclus</li>\n                    <li>â€¢ Sans engagement de votre part</li>\n                  </ul>\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-white bg-opacity-10 border-0\">\n                <CardContent className=\"p-6 text-center\">\n                  <Clock className=\"text-accent-orange mx-auto mb-4\" size={32} />\n                  <h4 className=\"font-poppins font-semibold text-lg mb-2\">\n                    RÃ©ponse Rapide Garantie\n                  </h4>\n                  <p>\n                    Nous nous engageons Ã  vous fournir votre estimation \n                    dans les 24h suivant notre visite.\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":10088},"client/src/pages/services/peinture-interieure.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { useLocation } from \"wouter\";\nimport { CheckCircle, Home, Palette, Shield, Clock, Star } from \"lucide-react\";\n\nexport default function PeintureInterieure() {\n  const [, setLocation] = useLocation();\n\n  const handleContact = () => {\n    setLocation(\"/contact\");\n  };\n\n  const features = [\n    \"PrÃ©paration minutieuse des surfaces\",\n    \"Choix expert des couleurs et finitions\", \n    \"Peintures Ã©cologiques de qualitÃ© supÃ©rieure\",\n    \"Protection complÃ¨te de vos meubles\",\n    \"Nettoyage complet aprÃ¨s travaux\",\n    \"Garantie satisfaction 100%\"\n  ];\n\n  const processSteps = [\n    {\n      title: \"Ã‰valuation Gratuite\",\n      description: \"Visite de votre domicile pour Ã©valuer vos besoins et vous conseiller\"\n    },\n    {\n      title: \"PrÃ©paration\",\n      description: \"Nettoyage, ponÃ§age et prÃ©paration soignÃ©e de toutes les surfaces\"\n    },\n    {\n      title: \"Application\",\n      description: \"Peinture professionnelle avec techniques et outils spÃ©cialisÃ©s\"\n    },\n    {\n      title: \"Finition\",\n      description: \"Inspection finale et nettoyage complet pour un rÃ©sultat parfait\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"peinture-interieure-page\">\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-secondary-blue to-dark text-white\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h1 className=\"text-5xl md:text-6xl font-poppins font-bold mb-6\" data-testid=\"service-title\">\n                Peinture RÃ©sidentielle IntÃ©rieure\n              </h1>\n              <p className=\"text-xl mb-8 leading-relaxed\">\n                Transformez vos espaces de vie avec notre expertise en peinture intÃ©rieure. \n                Finitions impeccables garanties par \"Les Murs de Augustin\".\n              </p>\n              <Button \n                size=\"lg\"\n                className=\"bg-primary-green hover:bg-primary-green/90 px-8 py-4 text-lg\"\n                onClick={handleContact}\n                data-testid=\"button-get-quote\"\n              >\n                Obtenir un Devis Gratuit\n              </Button>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\n                alt=\"Peintre professionnel au travail\"\n                className=\"rounded-xl shadow-2xl w-full\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"features-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-4\">\n              Ce Qui Nous Distingue\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Notre approche professionnelle garantit des rÃ©sultats exceptionnels\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {features.map((feature, index) => (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow\" data-testid={`feature-${index}`}>\n                <CardContent className=\"p-6 text-center\">\n                  <CheckCircle className=\"text-primary-green mx-auto mb-4\" size={32} />\n                  <p className=\"text-neutral font-medium\">{feature}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Process Section */}\n      <section className=\"py-20 bg-gray-50\" data-testid=\"process-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-4\">\n              Notre Processus\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Une mÃ©thode Ã©prouvÃ©e pour des rÃ©sultats parfaits Ã  chaque fois\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {processSteps.map((step, index) => (\n              <Card key={index} className=\"text-center hover:shadow-lg transition-shadow\" data-testid={`process-${index}`}>\n                <CardContent className=\"p-6\">\n                  <div className=\"w-12 h-12 bg-primary-green text-white rounded-full flex items-center justify-center mx-auto mb-4 text-xl font-bold\">\n                    {index + 1}\n                  </div>\n                  <h3 className=\"text-lg font-poppins font-semibold text-secondary-blue mb-3\">\n                    {step.title}\n                  </h3>\n                  <p className=\"text-neutral text-sm\">\n                    {step.description}\n                  </p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Gallery Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"gallery-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-4\">\n              Nos RÃ©alisations\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              DÃ©couvrez quelques-uns de nos projets de peinture intÃ©rieure rÃ©cents\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[\n              \"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&h=400\",\n              \"https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&h=400\",\n              \"https://images.unsplash.com/photo-1571508601891-ca5e7a713859?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&h=400\",\n              \"https://images.unsplash.com/photo-1620626011761-996317b8d101?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&h=400\",\n              \"https://images.unsplash.com/photo-1497366216548-37526070297c?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&h=400\",\n              \"https://images.unsplash.com/photo-1484154218962-a197022b5858?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&h=400\"\n            ].map((src, index) => (\n              <div key={index} className=\"group cursor-pointer\" data-testid={`gallery-image-${index}`}>\n                <img \n                  src={src}\n                  alt={`Projet peinture intÃ©rieure ${index + 1}`}\n                  className=\"w-full h-64 object-cover rounded-xl shadow-lg group-hover:shadow-xl transition-all group-hover:scale-105\"\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary-green text-white\" data-testid=\"cta-section\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-4xl font-poppins font-bold mb-6\">\n            PrÃªt Ã  Transformer Votre IntÃ©rieur?\n          </h2>\n          <p className=\"text-xl mb-8 max-w-2xl mx-auto\">\n            Contactez-nous dÃ¨s aujourd'hui pour un devis gratuit et personnalisÃ©\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button \n              size=\"lg\"\n              className=\"bg-white text-primary-green hover:bg-gray-100 px-8 py-4 text-lg\"\n              onClick={handleContact}\n              data-testid=\"button-contact-cta\"\n            >\n              Demander un Devis\n            </Button>\n            <Button \n              variant=\"outline\"\n              size=\"lg\"\n              className=\"border-white text-white hover:bg-white hover:text-primary-green px-8 py-4 text-lg\"\n              onClick={() => setLocation(\"/services\")}\n              data-testid=\"button-all-services\"\n            >\n              Voir Tous nos Services\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":8637},"client/src/pages/services/revetements-muraux.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { useLocation } from \"wouter\";\nimport { CheckCircle, Layers, Sparkles, Shield, Clock, Award } from \"lucide-react\";\n\nexport default function RevetementsMuraux() {\n  const [, setLocation] = useLocation();\n\n  const handleContact = () => {\n    setLocation(\"/contact\");\n  };\n\n  const services = [\n    {\n      icon: Sparkles,\n      title: \"Nettoyage Professionnel\",\n      description: \"PrÃ©paration minutieuse des surfaces pour une adhÃ©sion parfaite\"\n    },\n    {\n      icon: Layers,\n      title: \"Pose Experte\",\n      description: \"Installation prÃ©cise de tous types de revÃªtements muraux\"\n    },\n    {\n      icon: Shield,\n      title: \"Finition Protectrice\",\n      description: \"Application de traitements pour une durabilitÃ© maximale\"\n    }\n  ];\n\n  const materials = [\n    \"Papier peint traditionnel et moderne\",\n    \"RevÃªtements vinyle et PVC\",\n    \"Tissus muraux haut de gamme\",\n    \"RevÃªtements texturÃ©s et 3D\",\n    \"Panneaux dÃ©coratifs\",\n    \"Lambris et boiseries\"\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"revetements-muraux-page\">\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-secondary-blue to-dark text-white\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h1 className=\"text-5xl md:text-6xl font-poppins font-bold mb-6\" data-testid=\"service-title\">\n                Nettoyage et Pose de RevÃªtements Muraux\n              </h1>\n              <p className=\"text-xl mb-8 leading-relaxed\">\n                Expertise complÃ¨te en revÃªtements muraux : du nettoyage professionnel \n                Ã  la pose experte pour un rendu exceptionnel.\n              </p>\n              <Button \n                size=\"lg\"\n                className=\"bg-primary-green hover:bg-primary-green/90 px-8 py-4 text-lg\"\n                onClick={handleContact}\n                data-testid=\"button-get-quote\"\n              >\n                Demander un Devis\n              </Button>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\n                alt=\"Professionnel installant des revÃªtements muraux\"\n                className=\"rounded-xl shadow-2xl w-full\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Services Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"services-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-4\">\n              Nos Services SpÃ©cialisÃ©s\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Une approche complÃ¨te pour tous vos besoins en revÃªtements muraux\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {services.map((service, index) => {\n              const IconComponent = service.icon;\n              return (\n                <Card key={index} className=\"text-center hover:shadow-xl transition-shadow\" data-testid={`service-${index}`}>\n                  <CardContent className=\"p-8\">\n                    <IconComponent className=\"text-primary-green mx-auto mb-6\" size={48} />\n                    <h3 className=\"text-xl font-poppins font-semibold text-secondary-blue mb-4\">\n                      {service.title}\n                    </h3>\n                    <p className=\"text-neutral\">\n                      {service.description}\n                    </p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Materials Section */}\n      <section className=\"py-20 bg-gray-50\" data-testid=\"materials-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-4\">\n              Types de RevÃªtements\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Nous travaillons avec tous les types de revÃªtements muraux\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {materials.map((material, index) => (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow\" data-testid={`material-${index}`}>\n                <CardContent className=\"p-6 flex items-center space-x-4\">\n                  <CheckCircle className=\"text-primary-green\" size={24} />\n                  <span className=\"text-neutral font-medium\">{material}</span>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Process Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"process-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-6\">\n                Notre MÃ©thode de Travail\n              </h2>\n              <div className=\"space-y-6\">\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-8 h-8 bg-primary-green text-white rounded-full flex items-center justify-center font-bold text-sm flex-shrink-0\">\n                    1\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-secondary-blue mb-2\">Analyse et PrÃ©paration</h4>\n                    <p className=\"text-neutral\">Ã‰valuation de l'Ã©tat des murs et prÃ©paration complÃ¨te des surfaces</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-8 h-8 bg-primary-green text-white rounded-full flex items-center justify-center font-bold text-sm flex-shrink-0\">\n                    2\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-secondary-blue mb-2\">Nettoyage SpÃ©cialisÃ©</h4>\n                    <p className=\"text-neutral\">Nettoyage professionnel avec produits adaptÃ©s Ã  chaque surface</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-8 h-8 bg-primary-green text-white rounded-full flex items-center justify-center font-bold text-sm flex-shrink-0\">\n                    3\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-secondary-blue mb-2\">Pose Professionnelle</h4>\n                    <p className=\"text-neutral\">Installation experte avec techniques et outils spÃ©cialisÃ©s</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-8 h-8 bg-primary-green text-white rounded-full flex items-center justify-center font-bold text-sm flex-shrink-0\">\n                    4\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-secondary-blue mb-2\">Finition et ContrÃ´le</h4>\n                    <p className=\"text-neutral\">Finitions parfaites et contrÃ´le qualitÃ© pour un rÃ©sultat impeccable</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1463620695885-8a91d87c53d0?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\n                alt=\"Artisan au travail sur revÃªtements\"\n                className=\"rounded-xl shadow-lg w-full\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary-green text-white\" data-testid=\"cta-section\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-4xl font-poppins font-bold mb-6\">\n            Transformez Vos Murs Aujourd'hui\n          </h2>\n          <p className=\"text-xl mb-8 max-w-2xl mx-auto\">\n            Profitez de notre expertise en revÃªtements muraux pour crÃ©er des espaces uniques\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button \n              size=\"lg\"\n              className=\"bg-white text-primary-green hover:bg-gray-100 px-8 py-4 text-lg\"\n              onClick={handleContact}\n              data-testid=\"button-contact-cta\"\n            >\n              Obtenir un Devis Gratuit\n            </Button>\n            <Button \n              variant=\"outline\"\n              size=\"lg\"\n              className=\"border-white text-white hover:bg-white hover:text-primary-green px-8 py-4 text-lg\"\n              onClick={() => setLocation(\"/services\")}\n              data-testid=\"button-all-services\"\n            >\n              DÃ©couvrir Tous nos Services\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":9456},"client/src/pages/services/tirage-joints.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { useLocation } from \"wouter\";\nimport { Wrench, CheckCircle, Shield, Award, Clock, Star } from \"lucide-react\";\n\nexport default function TirageJoints() {\n  const [, setLocation] = useLocation();\n\n  const handleContact = () => {\n    setLocation(\"/contact\");\n  };\n\n  const serviceFeatures = [\n    {\n      icon: Wrench,\n      title: \"Technique Professionnelle\",\n      description: \"MaÃ®trise parfaite des techniques de tirage de joints modernes\"\n    },\n    {\n      icon: Shield,\n      title: \"Finition Durable\",\n      description: \"Joints rÃ©sistants aux fissures et Ã  l'usure du temps\"\n    },\n    {\n      icon: Award,\n      title: \"RÃ©sultat Impeccable\",\n      description: \"Surfaces parfaitement lisses prÃªtes pour la peinture\"\n    }\n  ];\n\n  const processSteps = [\n    {\n      title: \"PrÃ©paration des Surfaces\",\n      description: \"Nettoyage et inspection de tous les joints de gypse\",\n      details: [\"DÃ©poussiÃ©rage complet\", \"VÃ©rification de la soliditÃ©\", \"Protection des surfaces adjacentes\"]\n    },\n    {\n      title: \"Application du ComposÃ©\",\n      description: \"Pose experte du composÃ© Ã  joints en plusieurs couches\",\n      details: [\"PremiÃ¨re couche de base\", \"Couches de finition\", \"Respect des temps de sÃ©chage\"]\n    },\n    {\n      title: \"PonÃ§age de Finition\",\n      description: \"PonÃ§age minutieux pour obtenir une surface parfaitement lisse\",\n      details: [\"PonÃ§age progressif\", \"Ã‰limination des imperfections\", \"Nettoyage final\"]\n    },\n    {\n      title: \"PrÃ©paration Peinture\",\n      description: \"Surface prÃªte Ã  recevoir l'apprÃªt et la peinture finale\",\n      details: [\"VÃ©rification de la planÃ©itÃ©\", \"Application d'apprÃªt si nÃ©cessaire\", \"Protection finale\"]\n    }\n  ];\n\n  const applications = [\n    \"Construction neuve\",\n    \"RÃ©novation de maisons\",\n    \"RÃ©paration de fissures\",\n    \"Finition de sous-sols\",\n    \"Ajout de cloisons\",\n    \"RÃ©parations suite Ã  dÃ©gÃ¢ts d'eau\"\n  ];\n\n  const qualityStandards = [\n    \"Joints invisibles une fois peints\",\n    \"RÃ©sistance aux mouvements de structure\",\n    \"Finition lisse et uniforme\",\n    \"AdhÃ©rence parfaite sur gypse\",\n    \"PrÃ©paration optimale pour peinture\",\n    \"Respect des normes de construction\"\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-20\" data-testid=\"tirage-joints-page\">\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-secondary-blue to-dark text-white\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h1 className=\"text-5xl md:text-6xl font-poppins font-bold mb-6\" data-testid=\"service-title\">\n                Tirage des Joints\n              </h1>\n              <p className=\"text-xl mb-8 leading-relaxed\">\n                Finition parfaite des joints de gypse pour des surfaces lisses \n                et prÃªtes Ã  recevoir la peinture. Expertise garantie par \"Les Murs de Augustin\".\n              </p>\n              <Button \n                size=\"lg\"\n                className=\"bg-primary-green hover:bg-primary-green/90 px-8 py-4 text-lg\"\n                onClick={handleContact}\n                data-testid=\"button-get-quote\"\n              >\n                Demander un Devis\n              </Button>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1543362906-acfc16c67564?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\n                alt=\"Artisan effectuant le tirage de joints\"\n                className=\"rounded-xl shadow-2xl w-full\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"features-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-4\">\n              Notre Expertise en Tirage de Joints\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Des techniques professionnelles pour des finitions parfaites\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {serviceFeatures.map((feature, index) => {\n              const IconComponent = feature.icon;\n              return (\n                <Card key={index} className=\"text-center hover:shadow-xl transition-shadow\" data-testid={`feature-${index}`}>\n                  <CardContent className=\"p-8\">\n                    <IconComponent className=\"text-primary-green mx-auto mb-6\" size={48} />\n                    <h3 className=\"text-xl font-poppins font-semibold text-secondary-blue mb-4\">\n                      {feature.title}\n                    </h3>\n                    <p className=\"text-neutral\">\n                      {feature.description}\n                    </p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Process Section */}\n      <section className=\"py-20 bg-gray-50\" data-testid=\"process-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-4\">\n              Notre Processus de Travail\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Une mÃ©thode Ã©prouvÃ©e en 4 Ã©tapes pour des rÃ©sultats parfaits\n            </p>\n          </div>\n\n          <div className=\"space-y-12\">\n            {processSteps.map((step, index) => (\n              <div key={index} className={`grid lg:grid-cols-2 gap-8 items-center ${index % 2 === 1 ? 'lg:flex-row-reverse' : ''}`} data-testid={`step-${index}`}>\n                <div className={index % 2 === 1 ? 'lg:order-2' : ''}>\n                  <div className=\"flex items-center mb-4\">\n                    <div className=\"w-10 h-10 bg-primary-green text-white rounded-full flex items-center justify-center font-bold mr-4\">\n                      {index + 1}\n                    </div>\n                    <h3 className=\"text-2xl font-poppins font-semibold text-secondary-blue\">\n                      {step.title}\n                    </h3>\n                  </div>\n                  <p className=\"text-lg text-neutral mb-6\">\n                    {step.description}\n                  </p>\n                  <div className=\"space-y-2\">\n                    {step.details.map((detail, detailIndex) => (\n                      <div key={detailIndex} className=\"flex items-center space-x-3\">\n                        <CheckCircle className=\"text-primary-green\" size={20} />\n                        <span className=\"text-neutral\">{detail}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                <div className={index % 2 === 1 ? 'lg:order-1' : ''}>\n                  <Card className=\"hover:shadow-lg transition-shadow\">\n                    <CardContent className=\"p-6\">\n                      <img \n                        src={`https://images.unsplash.com/photo-150430765125${index + 4}-35680f356dfd?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&h=400`}\n                        alt={`Ã‰tape ${index + 1}: ${step.title}`}\n                        className=\"w-full h-48 object-cover rounded-lg\"\n                      />\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Applications Section */}\n      <section className=\"py-20 bg-white\" data-testid=\"applications-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-poppins font-bold text-secondary-blue mb-4\">\n              Applications de notre Service\n            </h2>\n            <p className=\"text-xl text-neutral max-w-2xl mx-auto\">\n              Le tirage de joints est essentiel pour de nombreux projets\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {applications.map((application, index) => (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow\" data-testid={`application-${index}`}>\n                <CardContent className=\"p-4 flex items-center space-x-3\">\n                  <CheckCircle className=\"text-primary-green\" size={24} />\n                  <span className=\"text-neutral font-medium\">{application}</span>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Quality Standards Section */}\n      <section className=\"py-20 bg-primary-green text-white\" data-testid=\"quality-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-4xl font-poppins font-bold mb-6\">\n                Standards de QualitÃ©\n              </h2>\n              <p className=\"text-xl mb-8\">\n                Nous respectons les plus hauts standards de l'industrie pour \n                vous garantir des finitions parfaites et durables.\n              </p>\n              <div className=\"space-y-4\">\n                {qualityStandards.map((standard, index) => (\n                  <div key={index} className=\"flex items-center space-x-3\" data-testid={`quality-${index}`}>\n                    <Star className=\"text-accent-orange\" size={24} />\n                    <span className=\"font-medium\">{standard}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div>\n              <Card className=\"bg-white bg-opacity-10 border-0\">\n                <CardContent className=\"p-8 text-center\">\n                  <Clock className=\"text-accent-orange mx-auto mb-6\" size={48} />\n                  <h3 className=\"text-2xl font-poppins font-semibold mb-4\">\n                    Garantie de Satisfaction\n                  </h3>\n                  <p className=\"mb-6\">\n                    Nous garantissons la qualitÃ© de nos travaux de tirage de joints. \n                    Si vous n'Ãªtes pas satisfait, nous corrigeons gratuitement.\n                  </p>\n                  <Button \n                    className=\"bg-white text-primary-green hover:bg-gray-100\"\n                    onClick={handleContact}\n                    data-testid=\"button-guarantee\"\n                  >\n                    En Savoir Plus\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-secondary-blue text-white\" data-testid=\"cta-section\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-4xl font-poppins font-bold mb-6\">\n            Besoin de Tirage de Joints Professionnel?\n          </h2>\n          <p className=\"text-xl mb-8 max-w-2xl mx-auto\">\n            Contactez-nous pour obtenir des surfaces parfaitement lisses et prÃªtes Ã  peindre\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button \n              size=\"lg\"\n              className=\"bg-primary-green hover:bg-primary-green/90 px-8 py-4 text-lg\"\n              onClick={handleContact}\n              data-testid=\"button-contact-cta\"\n            >\n              Obtenir un Devis\n            </Button>\n            <Button \n              variant=\"outline\"\n              size=\"lg\"\n              className=\"border-white text-white hover:bg-white hover:text-secondary-blue px-8 py-4 text-lg\"\n              onClick={() => setLocation(\"/services\")}\n              data-testid=\"button-all-services\"\n            >\n              Voir Tous nos Services\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":12250}}}